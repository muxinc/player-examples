{"version":3,"sources":["node_modules/safe-json-parse/tuple.js","node_modules/global/window.js","node_modules/videojs-vtt.js/lib/vtt.js","node_modules/videojs-vtt.js/lib/vttcue.js","node_modules/videojs-vtt.js/lib/vttregion.js","node_modules/videojs-vtt.js/lib/browser-index.js","node_modules/tsml/tsml.js","node_modules/is-function/index.js","node_modules/trim/index.js","node_modules/is-callable/index.js","node_modules/for-each/index.js","node_modules/parse-headers/parse-headers.js","node_modules/xtend/immutable.js","node_modules/xhr/index.js","node_modules/url-toolkit/src/url-toolkit.js","node_modules/m3u8-parser/dist/m3u8-parser.es.js","node_modules/global/document.js","node_modules/mpd-parser/dist/mpd-parser.es.js","node_modules/mux.js/lib/utils/bin.js","node_modules/mux.js/lib/mp4/probe.js","node_modules/mux.js/lib/mp4/mp4-generator.js","node_modules/mux.js/lib/utils/stream.js","node_modules/mux.js/lib/mp4/frame-utils.js","node_modules/mux.js/lib/data/silence.js","node_modules/mux.js/lib/utils/clock.js","node_modules/mux.js/lib/mp4/audio-frame-utils.js","node_modules/mux.js/lib/mp4/track-decode-info.js","node_modules/mux.js/lib/tools/caption-packet-parser.js","node_modules/mux.js/lib/m2ts/caption-stream.js","node_modules/mux.js/lib/m2ts/stream-types.js","node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","node_modules/mux.js/lib/m2ts/metadata-stream.js","node_modules/mux.js/lib/m2ts/m2ts.js","node_modules/mux.js/lib/codecs/adts.js","node_modules/mux.js/lib/utils/exp-golomb.js","node_modules/mux.js/lib/codecs/h264.js","node_modules/mux.js/lib/aac/utils.js","node_modules/mux.js/lib/aac/index.js","node_modules/mux.js/lib/mp4/transmuxer.js","node_modules/mux.js/lib/tools/mp4-inspector.js","node_modules/mux.js/lib/mp4/caption-parser.js","node_modules/mux.js/lib/mp4/index.js","node_modules/mux.js/lib/m2ts/probe.js","node_modules/mux.js/lib/tools/ts-inspector.js","node_modules/pkcs7/dist/pkcs7.es.js","node_modules/aes-decrypter/dist/aes-decrypter.es.js","node_modules/video.js/dist/video.es.js","index.js"],"names":["fnToStr","Function","prototype","toString","constructorRegex","isES6ClassFn","value","fnStr","call","test","e","tryFunctionObject","toStr","Object","fnClass","genClass","hasToStringTag","Symbol","toStringTag","module","exports","strClass","extend","hasOwnProperty","target","i","arguments","length","source","key","classCallCheck","instance","Constructor","TypeError","_extends","assign","inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","Stream","listeners","on","type","listener","push","off","index","indexOf","splice","trigger","callbacks","args","Array","slice","apply","dispose","pipe","destination","data","LineStream","_Stream","_this","buffer","nextNewline","substring","attributeSeparator","RegExp","parseAttributes","attributes","attrs","split","result","attr","exec","replace","ParseStream","customParsers","line","match","event","tagType","duration","parseFloat","title","parseInt","version","number","playlistType","offset","allowed","URI","uri","BYTERANGE","_attributes$BYTERANGE","byterange","RESOLUTION","resolution","width","height","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","toLowerCase","Uint32Array","PRECISE","text","addParser","_ref","_this2","expression","customType","dataParser","segment","Parser","lineStream","parseStream","uris","currentUri","currentMap","_key","defaultMediaGroups","currentTimeline","manifest","allowCache","discontinuityStarts","segments","entry","mediaGroup","rendition","tag","message","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","method","iv","isFinite","playlist","map","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","targetduration","targetDuration","totalduration","totalDuration","start","isNaN","timeOffset","precise","cueOut","cueOutCont","cueIn","timeline","comment","custom","chunk","end","options","isObject","obj","merge","_len","objects","reduce","keys","forEach","isArray","concat","values","o","k","range","flatten","lists","x","y","from","list","findIndexes","l","a","mergeDiscontiguousPlaylists","mergedPlaylists","acc","name","_acc$name$segments","id","lang","contentProtection","formatAudioPlaylist","_attributes","bandwidth","CODECS","codecs","periodIndex","resolvedUri","formatVttPlaylist","_ref2","_attributes2","baseUrl","sourceDuration","organizeAudioPlaylists","role","label","default","organizeVttPlaylists","formatVideoPlaylist","_ref3","_attributes3","AUDIO","SUBTITLES","toM3u8","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","minimumUpdatePeriod","videoPlaylists","filter","_ref4","mimeType","contentType","audioPlaylists","_ref5","vttPlaylists","_ref6","master","VIDEO","audio","subs","commonjsGlobal","window","global","createCommonjsModule","fn","urlToolkit","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","opts","trim","alwaysNormalize","basePartsForNormalise","parseURL","Error","path","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","builtParts","params","query","fragment","baseURLPath","newPath","lastIndexOf","url","parts","reverse","join","resolveUrl","relativeUrl","window$1","location","href","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","init","ranges","startRange","endRange","getLiveRValue","time","NOW","clientOffset","availabilityStartTime","_attributes$timescale","timescale","_attributes$start","_attributes$minimumUp","periodDuration","Math","ceil","parseByTimeline","segmentTimeline","_attributes$type","_attributes$minimumUp2","_attributes$media","_attributes$timescale2","_attributes$startNumb","startNumber","sIndex","S","d","repeat","r","segmentTime","t","count","nextS","segmentRange","static","dynamic","_attributes$timeShift","timeShiftBufferDepth","Infinity","now","periodStartWC","segmentCount","availableStart","floor","availableEnd","max","min","toSegments","_attributes$timescale3","parseByDuration","_attributes$timescale4","_segmentRange$type","identifierPattern","identifierReplacement","identifier","format","constructTemplateUrl","parseTemplateInfo","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","_attributes$initializ","initialization","sourceURL","mapSegment","Number","Time","errors","INVALID_NUMBER_OF_PERIOD","DASH_EMPTY_MANIFEST","DASH_INVALID_XML","NO_BASE_URL","MISSING_SEGMENT_INFORMATION","SEGMENT_TIME_UNSPECIFIED","UNSUPPORTED_UTC_TIMING_SCHEME","SegmentURLToSegmentObject","segmentUrl","initSegment","mediaRange","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentTimeInfo","segmentUrlObject","segmentsFromBase","_attributes$indexRang","indexRange","generateSegments","segmentAttributes","segmentsFn","segmentInfo","template","base","_segmentAttributes","_segmentAttributes$ti","toPlaylists","representations","findChildren","element","childNodes","tagName","getContent","textContent","parseDuration","str","SECONDS_IN_YEAR","_match$slice","year","month","day","hour","minute","second","parseDate","parse","parsers","mediaPresentationDuration","parsedValue","el","parseFn","decodeB64ToUint8Array","b64Text","decodedString","atob","array","Uint8Array","charCodeAt","keySystemsMap","buildBaseUrls","referenceUrls","baseUrlElements","reference","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","s","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","inheritBaseUrls","adaptationSetAttributes","adaptationSetBaseUrls","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","generateKeySystemInformation","contentProtectionNodes","node","keySystem","schemeIdUri","psshNode","pssh","psshBuffer","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","roleAttributes","toAdaptationSets","mpdAttributes","mpdBaseUrls","period","periodAtt","parsedPeriodId","adaptationSets","inheritAttributes","mpd","_options","_options$manifestUri","manifestUri","_options$NOW","_options$clientOffset","periods","stringToMpdXml","manifestString","parser","xml","DOMParser","parseFromString","documentElement","getElementsByTagName","parseUTCTimingScheme","UTCTimingNode","VERSION","parseUTCTiming","PADDING","pad","plaintext","padding","byteLength","set","unpad","padded","subarray","createClass","defineProperties","props","descriptor","defineProperty","protoProps","staticProps","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","tEnc","tDec","aesTables","AES","_tables","j","tmp","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","b","c","a2","b2","c2","nInnerRounds","kIndex","table","table0","table1","table2","table3","_length","_i","AsyncStream","jobs","delay","timeout_","processJob_","shift","setTimeout","bind","job","ntoh","word","encrypted","initVector","encrypted32","Int32Array","byteOffset","decipher","decrypted","decrypted32","init0","init1","init2","init3","wordIx","Decrypter","done","step","STEP","asyncStream_","decryptChunk_","bytes","get","videojs$1","_inheritsLoose","_setPrototypeOf","p","isNativeReflectConstruct","Reflect","construct","sham","Proxy","_construct","Parent","Class","_assertThisInitialized","_taggedTemplateLiteralLoose","strings","raw","history","LogByTypeFactory","log","level","lvl","levels","lvlRegExp","unshift","toUpperCase","console","info","createLogger","logByType","subname","all","debug","warn","error","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","createLogger$1","object","each","initial","accum","sources","isPlain","computedStyle","prop","getComputedStyle","cs","_templateObject","isNonBlankString","throwIfWhitespace","classRegExp","className","isReal","document","isEl","nodeType","isInFrame","parent","createQuerier","selector","context","querySelector","ctx","createEl","properties","content","createElement","getOwnPropertyNames","propName","val","setAttribute","attrName","appendContent","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","classToCheck","classList","contains","addClass","classToAdd","add","removeClass","classToRemove","remove","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","knownBooleans","attrVal","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","undefined","findPosition","box","left","top","docEl","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","round","getPointerPosition","position","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","pageY","pageX","changedTouches","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","freeze","_guid","newGUID","elData","elIdAttr","getTime","getData","hasData","removeData","_cleanUpEvents","elem","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","callback","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","which","charCode","keyCode","_supportsPassive","addEventListener","passiveEvents","guid","hash","handlersCopy","m","n","passive","attachEvent","removeType","elemData","ownerDocument","bubbles","targetData","one","func","videojs","Events","_windowLoaded","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","readyState","EVENT_MAP","createStyleElement","style","setTextContent","styleSheet","cssText","uid","bound","throttle","last","throttled","debounce","immediate","timeout","cancel","debounced","_later","clearTimeout","EventTarget","allowedEvents_","ael","dispatchEvent","queueTrigger","Map","oldTimeout","delete","size","isEvented","eventBusEl_","every","addEventedCallback","eventedCallbacks","isValidEventType","validateTarget","nodeName","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","state","setState","stateUpdates","changes","to","stateful","defaultState","handleStateChanged","toTitleCase","string","charAt","titleCaseEquals","str1","str2","mergeOptions","Component","ready","play","player_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","_proto","localize","tokens","defaultValue","code","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","workingChildren","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","sync","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","emitTapEvents","touchStart","couldBeTap","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","_this3","intervalId","requestAnimationFrame","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","Boolean","USER_AGENT","navigator","userAgent","webkitVersionMap","appleWebkitVersion","pop","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","browser","rangeCheck","fnName","maxIndex","getRange","valueIndex","rangeIndex","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","browserApi","FullscreenApi","apiMap","specApi","MediaError","defaultMessages","status","errorTypes","errNum","isPromise","then","silencePromise","trackToJson_","track","cues","cue","startTime","endTime","textTracksToJson","tech","trackEls","trackObjs","tracks","trackEl","json","src","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","textTrackConverter","MODAL_CLASS_NAME","ESC","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","description","tabIndex","previouslyActiveEl_","handleKeyPress","close","desc","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","handleKeyDown","focusableEls","focusIndex","focusableEls_","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","getTrackById","change","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","changing_","disableOthers$1","selected","VideoTrackList","TextTrackList","kind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","TextTrackKind","descriptions","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","parseUrl","addToBody","div","host","protocol","innerHTML","details","getAbsoluteURL","getFileExtension","splitPathRe","isCrossOrigin","winLoc","urlInfo","crossOrigin","Url","parseCues","srcContent","WebVTT","vttjs","StringDecoder","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","cors","err","response","responseBody","loaded_","tech_","loadHandler","TextTrack","_Track","settings","srclang","mode","default_","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADING","LOADED","ERROR","HTMLTrackElement","load","NORMAL","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","createTrackHelper","names","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","vtt","script","onload","onerror","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","use","middleware","next","setSourceHelper","setTech","mw","reduceRight","middlewareIterator","set$1","arg","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","mws","clearCacheForPlayer","getOrCreateFactory","mwFactory","_mws$i","mwf","mwi","lastRun","_middleware","mwrest","_src","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","mp3","aac","oga","m3u8","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","filterSource","newsrc","srcobj","fixSource","MediaLoader","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleFocus","handleBlur","PosterImage","_ClickableComponent","update","poster","setSrc","backgroundImage","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","modes","firstDesc","firstCaptions","preferredTrack","trackList","userPref","selectedLanguage","clearDisplay","processCues","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","h","gm","gh","implementation","setFormatTime","customImplementation","resetFormatTime","formatTime","TimeDisplay","throttledUpdateContent","updateContent","plainName","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","progress","getPercent","percentage","toFixed","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","isLive","seekableEnd","bufferedEnd","controlTextPercentage","percentify","rounded","percent","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","updateTime","rafId_","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","STEP_SECONDS","UPDATE_REFRESH_INTERVAL","SeekBar","_Slider","setEventHandlers_","updateInterval","update_","liveCurrentTime","getCurrentTime_","seekableStart","videoWasPlaying","newTime","distance","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","FullscreenToggle","handleFullscreenChange","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","volume","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","Menu","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","append","btn","buttonPressed_","stepChild","item","MenuButton","buttonClass","menu","handleSubmenuKeyPress","createMenu","items","hideThreshold_","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","LOCAL_STORAGE_KEY","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","parseOptionValue","getSelectedOptionValue","selectedIndex","setSelectedOption","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","setValues","JSON","localStorage","getItem","setItem","stringify","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unobserve","disconnect","resizeObserver","LiveTracker","reset_","handleDurationchange","isBehind_","timeupdateSeen_","seekableIncrement","seekableIncrement_","trackLive_","pastSeekEnd_","newSeekEnd","lastSeekEnd_","abs","pastSeekEnd","behindLiveEdge","behindLiveEdge_","startTracking","stopTracking","isTracking","trackingInterval_","handleTimeupdate","seekableEnds","sort","seekableStarts","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","getOwnPropertyDescriptor","getInnerHTMLDescriptor","HTMLMediaElement","firstSourceWatch","resetSourceWatch_","innerDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","getSrcDescriptor","setupSourceset","resetSourceset_","srcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodesLength","nodes","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","tagAttributes","techId","class","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","NaN","checkProgress","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","performance","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","_templateObject$2","patchCanPlayType","unpatchCanPlayType","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","isPosterFromTech_","queuedCallbacks_","userActive_","languagesToLower","name$$1","languages_","poster_","controls_","autoplay","scrubbing_","lastPlaybackRate","defaultPlaybackRate","fluid_","updateStyleEl_","playerOptionsCopy","plugins","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","breakpoints","responsive","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","links","linkEl","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","promise","previouslyMuted","catch","updateSourceCaches_","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","updateCache","techSrc","techGet","request","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userWasActive","PromiseClass","Promise","resolve","play_","_this8","isScrubbing","liveui","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","_this9","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","foundSourceAndTech","sourceOrder","_this10","middlewareSource","src_","notSupportedMessage","_this11","sourceTech","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","inactivityTimeout","handleActivity","screenX","screenY","isAudio_","_obj","String","toJSON","createModal","_this12","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","plugin","basicPluginWrapper","createPluginFactory","PluginSubClass","getEventHash","Plugin","isBasic","registerPlugin","deregisterPlugin","getPlugins","getPluginVersion","usingPlugin","hasPlugin","_inherits$1","super_","subClassMethods","methods","normalizeId","getPlayer","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","style$1","getPlayers","nId","_tag","_player","getAllPlayers","comp","writeable","addLanguage","_mergeOptions","createTimeRange","xhr","dom","get$1","property","receiver","getPrototypeOf","getter","slicedToArray","arr","iterator","sliceIterator","_arr","_n","_d","_e","_s","mergeOptions$1","EventTarget$1","log$1","forEachMediaGroup","mediaType","groupKey","labelKey","mediaProperties","updateSegments","resolveSegmentUris","baseUri","updateMaster","mergedPlaylist","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","PlaylistLoader","srcUrl","hls","withCredentials","hls_","req","playlistRequestError","haveMetadata","xhr$$1","startingState","responseText","media_","mediaUpdateTimeout","stopRequest","oldRequest","onreadystatechange","abort","mediaChange","started","isFinalRendition","backwardDuration","endSequence","forwardDuration","intervalDuration","expired","backward","forward","sumDurations","startIndex","endIndex","durations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","scale","pow","ceilLeastSignificantDigit","floorLeastSignificantDigit","getMediaInfoForTime","numSegments","mediaIndex","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bytesReceived","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","headers","responseHeaders","timedout","aborted","statusCode","originalAbort","textRange","formatHexString","formatAsciiString","fromCharCode","createTransferableMessage","transferable","ArrayBuffer","isView","initSegmentId","hexDump","tagDump","textRanges","utils","timeWithinSegment","requestedTime","segmentStart","requestedTimeString","toISOString","segmentTimeString","endTimeString","findSegmentForTime","manifestTime","estimatedEnd","estimatedStart","timeWithinSegmentEnd","timeWithinSegmentDuration","findSegmentForPlayerTime","findSegmentForStreamTime","streamTime","getOffsetFromTimestamp","comparisonTimeStamp","segmentDateTime","streamDateTime","segmentTimeEpoch","verifyProgramDateTimeTags","getStreamTime","_ref$time","matchedSegment","seekTime","mediaSeconds","programDateTime","seekToStreamTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","mediaOffset","seekToTime","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","results","findRange","findNextRange","findGaps","printableRange","strArr","timeUntilRebuffer","timeRangesToArray","timeRangesList","createTextTracksIfNecessary","sourceBuffer","mediaSource","trackId","inbandTextTracks_","captionStreams","metadataTrack_","inBandMetadataTrackDispatchType","dispatchType","removeCuesFromTrack","deprecateOldCue","frame","privateData","durationOfVideo","dur","addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","caption","stream","timestampOffset","videoDuration","mediaSource_","cueTime","frames","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","idx","cueGroup","nextTime","win","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","revokeObjectURL","terminate","createObjectURL","Blob","blob","getBlob","worker","term","TransmuxWorker","document$$1","UINT32_MAX","dinf","esds","ftyp","mfhd","minf","moof","moov","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","avc1","avcC","btrt","dref","mdat","mp4a","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","vmhd","payload","DataView","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","boxes","samples","flags","dependsOn","isDependedOn","hasRedundancy","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","mp4Generator","_findBox","parseType","getVideoTrackIds","fileType","movie","toUnsigned$1","traks","trafs","baseTimes","baseTime","videoTrackIds","hdlrs","tkhds","handlerType","view","getUint8","getUint32","probe","findBox","subresults","flushSource","metaTable","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","sampleForFrame","dataOffset","pts","dts","keyFrame","frameUtils","nalUnits","currentNal","currentFrame","nalUnitType","currentGop","gops","nalCount","baseDataOffset","nalsByteLength","numberOfNals","highPrefix","lowPrefix","zeroFill","coneOfSilence","silence","timestamp","sampleRate","clock","audioFrameUtils","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","ONE_SECOND_IN_TS$1","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","sum","sumFrameByteLengths","trackDecodeInfo","maxSegmentDts","maxSegmentPts","keepOriginalTimestamps","timelineStartInfo","captionPacketParser","payloadType","payloadSize","sei","userData","ccData","newLength","newData","emulationPreventionBytesPositions","sourceIndex","CaptionStream","captionPackets_","ccStreams_","Cea608Stream","cc","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","presortIndex","packet","dispatchCea608Packet","activeCea608Channel_","ccStream","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","startPts","endPts","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","char","newBaseRow","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","handleRollover","direction","TimestampRolloverStream","lastDTS","referenceDTS","type_","timestampRolloverStream","_MetadataStream","percentEncode","parseUtf8","decodeURIComponent","parseSyncSafeInteger","tagParsers","TXXX","WXXX","PRIV","owner","unescape","tagSize","bufferSize","frameStart","frameSize","dataAlignmentIndicator","timeStamp","metadataStream","_TransportPacketStream","_TransportParseStream","_ElementaryStream","TimestampRolloverStream$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","sectionLength","tableEnd","streamType","pid","processPes_","STREAM_TYPES","h264","adts","timedMetadata","flushStream","stream$$1","forceFlush","packetData","packetFlushable","pes","ptsDtsFlags","packetLength","codec","m2ts","PAT_PID","MP2T_PACKET_LENGTH","TransportPacketStream","TransportParseStream","ElementaryStream","MetadataStream","m2ts_1","_AdtsStream","ADTS_SAMPLING_FREQUENCIES","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","frameNum","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","nalByteStream","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","expGolombDecoder","lastScale","nextScale","frameCropLeftOffset","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","aspectRatioIdc","_AacStream","H264Stream","NalByteStream","header","byteIndex","returnSize","footerPresent","lowThree","middle","highTwo","setTimestamp","bytesLeft","tempLength","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","isLikelyAacData$1","AUDIO_PROPERTIES","VIDEO_PROPERTIES","arrayEquals","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","halfSecond","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","total","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","id3","timelineStartPts","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","setupTsPipeline","packetStream","elementaryStream","videoTimestampRolloverStream","h264Stream","videoSegmentStream","setBaseMediaDecodeTime","isAac","resetCaptions","transmuxer","inspectMp4","_textifyMp","Transmuxer","VideoSegmentStream","AudioSegmentStream","parseType$2","parseMp4Date","parseSampleFlags","nalParse","avcStream","avcView","parse$$1","dataReferenceIndex","getUint16","horizresolution","vertresolution","frameCount","depth","numOfPictureParameterSets","nalSize","configurationVersion","avcProfileIndication","avcLevelIndication","lengthSizeMinusOne","numOfSequenceParameterSets","bufferSizeDB","maxBitrate","avgBitrate","esId","streamPriority","decoderConfig","objectProfileIndication","decoderConfigDescriptor","audioObjectType","samplingFrequencyIndex","channelConfiguration","majorBrand","minorVersion","compatibleBrands","dataReferences","escape","nals","modificationTime","streamDescriptor","matrix","nextTrackId","pdin","initialDelay","sidx","references","referenceId","earliestPresentationTime","firstOffset","referenceCount","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","balance","chunkOffsets","entryCount","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","sampleDescriptions","sampleSize","entries","timeToSamples","sampleDelta","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","layer","alternateGroup","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","graphicsmode","opcolor","Uint16Array","mp4Inspector","inspect","ab","z","textify","inspectedMp4","indent","prefix","byte","parseTfdt","parseHdlr","parseTfhd","parseTrun","discardEmulationPreventionBytes$1","CaptionStream$1","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","seiNals","headerInfo","truns","seiNal","lastMatchedSample","matchingSample","findSeiNals","allSamples","trackRun","parseSamples","generator","CaptionParser","isInitialized","captionStream$$1","segmentCache","parsedCaptions","isNewInit","timescales","parsedData","cachedSegment","parseEmbeddedCaptions","pushNals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","MessageHandlers","initArray","typedArray","action","gopInfo","appendStart","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","orig","profile","avcLevel","parseCodecs","parsed","codecCount","mapLegacyAvcCodecs","codecString","makeMimeTypeString","container","getContainerType","getCodecs","mediaAttributes","audioProfileFromDefault","audioGroupId","audioGroup","audioType","mimeTypesForPlaylist","containerType","codecInfo","isMuxed","isMaat","groupId","codecStrings","justAudio","justVideo","bothVideoAudio","parseContentType","parameters","parameter","isAudioCodec","isVideoCodec","gopsSafeToAlignWith","mapping","currentTimePts","updateGopBuffer","removeGopBuffer","updatedBuffer","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","makeWrappedSourceBuffer","addSourceBuffer","updating","realBuffer_","VirtualSourceBuffer","_videojs$EventTarget","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoBuffer_","audioBuffer_","appendWindowStart","processPendingSegments_","codecProperty","nativeMediaSource_","shouldTrigger","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","HtmlMediaSource","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","urlCount","mediaSources","msObjectURL","swfId","supportsNativeMediaSources","isTypeSupported","URL$1","objectUrlPrefix","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","playlistUpdate","group","_playlistUpdate","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","masterPlaylistLoader_","masterXml_","clientOffset_","phonyUri","_phonyUri","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","updatedMaster","logger","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","runCallback_","queueCallback_","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","FAILURE","TIMEOUT","ABORTED","byterangeStr","byterangeStart","byterangeEnd","segmentXhrHeaders","Range","abortAll","activeXhrs","getRequestStats","getProgressStats","progressEvent","stats","loaded","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","handleInitSegmentResponse","captionParser","mp4probe","handleSegmentResponse","encryptedBytes","fmp4Captions","decryptSegment","decrypter","doneFn","decryptionHandler","requestId","waitForCompletion","didError","endOfAllRequests","handleProgress","progressFn","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","keyRequestOptions","keyXhr","responseType","initSegmentOptions","initSegmentXhr","segmentRequestOptions","segmentXhr","safeGetComputedStyle","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","comparePlaylistResolution","leftWidth","rightWidth","simpleSelector","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","lastBandwidthSelector","systemBandwidth","minRebufferMaxBandwidthSelector","duration$$1","syncController","compatiblePlaylists","enabledPlaylists","bandwidthPlaylists","rebufferingEstimates","numRequests","getSyncPoint","rebufferingImpact","noRebufferingPlaylists","estimate","lowestBitrateCompatibleVariantSelector","playlistsWithVideo","createCaptionsTrackIfNotExists","inbandTextTracks","addCaptionData","CHECK_BUFFER_DELAY","detectEndOfStream","segmentIndex","appendedLastSegment","finite","illegalMediaSwitch","loaderType","startingMedia","newSegmentMedia","containsAudio","containsVideo","safeBackBufferTrimTime","seekable$$1","removeToTime","segmentInfoString","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","captionParser_","decrypter_","syncController_","syncPoint_","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","checkBuffer_","buffered_","endOfStream","startOfSegment","loadSegment_","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","random","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","switchCandidate","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","processSegmentResponse_","handleSegment_","timingInfo","probeSegmentInfo","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","_track","skipEmptySegments_","timestampOffsetForTimeline","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","TextDecoder","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","updateAdCues","adOffset","adTotal","_segment$cueOutCont$s","_segment$cueOutCont$s2","tsprobe","tsInspector","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","discontinuitySync","discontinuities","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","dtsTime","accuracy","mediaIndexDiff","Decrypter$1","AsyncStream$$1","Decrypter$$1","decrypt$$1","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onGroupChanged","_settings$segmentLoad","segmentLoaders","mainSegmentLoader","mediaTypes","activeTrack","activeGroup","previousActiveLoader","onTrackChanged","_settings$segmentLoad2","onError","blacklistCurrentPlaylist","defaultTrack","setupListeners","requestOptions","byGroupId","byResolvedUri","initialize","_settings$master","_settings$mediaTypes$","groups","groupPlaylists","variantLabel","_settings$mediaTypes$2","_settings$mediaTypes$3","variants","setupMediaGroups","onAudioTrackChanged","createMediaTypes","ABORT_EARLY_BLACKLIST_SECONDS","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","ended","isEndOfStream","getExpiredTime","absolutePlaylistEnd","mainSeekable","audioSeekable","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","variantCodecs","enableFunction","loader","playlistUri","changePlaylistFn","incompatible","currentlyEnabled","Representation","hlsHandler","mpc","masterPlaylistController_","qualityChangeFunction","smoothQualityChange","renditionSelectionMixin","timerCancelEvents","PlaybackWatcher","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","currentRange","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","errorHandler","cleanupEvents","reloadSourceOnError","version$1","vhs","source_","Hls$1","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","LOCAL_STORAGE_KEY$1","simpleTypeFromSourceType","dashRE","handleHlsMediaChange","qualityLevels","selectedIndex_","handleHlsLoadedMetadata","addQualityLevel","emeKeySystems","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","audioContentType","videoContentType","setupEmeOptions","eme","sourceOptions","keySystems","initializeMediaKeys","getVhsLocalStorage","storedObject","updateVhsLocalStorage","objectToStore","supportsNativeHls","canPlay","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","smoothQualityChange_","pauseLoading","useBandwidthFromLocalStorage","option","playbackWatcher_","invBandwidth","invThroughput","systemBitrate","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","setupQualityLevels_","qualityLevels_","HlsSourceHandler","supportedType","canUseMsePlayback","getElementById","URLSearchParams","search","assetId"],"mappings":"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","file":"videojs-src.f41298fa.map","sourceRoot":"..","sourcesContent":["module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","var trim = require('trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  if(typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if(typeof define === 'function' && define.amd)\n    define([], function() { return URLToolkit; });\n  else if(typeof exports === 'object')\n    exports[\"URLToolkit\"] = URLToolkit;\n  else\n    root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */\n","var classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i = void 0;\n    var length = void 0;\n    var args = void 0;\n\n    if (!callbacks) {\n      return;\n    }\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      length = callbacks.length;\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream = function (_Stream) {\n  inherits(LineStream, _Stream);\n\n  function LineStream() {\n    classCallCheck(this, LineStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.buffer = '';\n    return _this;\n  }\n\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {String} data the text to process\n   */\n\n\n  LineStream.prototype.push = function push(data) {\n    var nextNewline = void 0;\n\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\n/**\n * @file m3u8/parse-stream.js\n */\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n\n/**\n * Parse attributes from a line given the seperator\n *\n * @param {String} attributes the attibute line to parse\n */\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr = void 0;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    }\n\n    // split the key and value\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1);\n    // trim whitespace and remove optional quotes around the value\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n  return result;\n};\n\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\nvar ParseStream = function (_Stream) {\n  inherits(ParseStream, _Stream);\n\n  function ParseStream() {\n    classCallCheck(this, ParseStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.customParsers = [];\n    return _this;\n  }\n\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {String} line a single line of an M3U8 file to parse\n   */\n\n\n  ParseStream.prototype.push = function push(line) {\n    var match = void 0;\n    var event = void 0;\n\n    // strip whitespace\n    line = line.replace(/^[\\u0000\\s]+|[\\u0000\\s]+$/g, '');\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    }\n\n    // URIs\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    }\n\n    for (var i = 0; i < this.customParsers.length; i++) {\n      if (this.customParsers[i].call(this, line)) {\n        return;\n      }\n    }\n\n    // Comments\n    if (line.indexOf('#EXT') !== 0) {\n      this.trigger('data', {\n        type: 'comment',\n        text: line.slice(1)\n      });\n      return;\n    }\n\n    // strip off any carriage returns here so the regex matching\n    // doesn't have to account for them.\n    line = line.replace('\\r', '');\n\n    // Tags\n    match = /^#EXTM3U/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'm3u'\n      });\n      return;\n    }\n    match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'inf'\n      };\n      if (match[1]) {\n        event.duration = parseFloat(match[1]);\n      }\n      if (match[2]) {\n        event.title = match[2];\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'targetduration'\n      };\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'totalduration'\n      };\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'version'\n      };\n      if (match[1]) {\n        event.version = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media-sequence'\n      };\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'discontinuity-sequence'\n      };\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'playlist-type'\n      };\n      if (match[1]) {\n        event.playlistType = match[1];\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'byterange'\n      };\n      if (match[1]) {\n        event.length = parseInt(match[1], 10);\n      }\n      if (match[2]) {\n        event.offset = parseInt(match[2], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'allow-cache'\n      };\n      if (match[1]) {\n        event.allowed = !/NO/.test(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MAP:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'map'\n      };\n\n      if (match[1]) {\n        var attributes = parseAttributes(match[1]);\n\n        if (attributes.URI) {\n          event.uri = attributes.URI;\n        }\n        if (attributes.BYTERANGE) {\n          var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n              length = _attributes$BYTERANGE[0],\n              offset = _attributes$BYTERANGE[1];\n\n          event.byterange = {};\n          if (length) {\n            event.byterange.length = parseInt(length, 10);\n          }\n          if (offset) {\n            event.byterange.offset = parseInt(offset, 10);\n          }\n        }\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'stream-inf'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.RESOLUTION) {\n          var split = event.attributes.RESOLUTION.split('x');\n          var resolution = {};\n\n          if (split[0]) {\n            resolution.width = parseInt(split[0], 10);\n          }\n          if (split[1]) {\n            resolution.height = parseInt(split[1], 10);\n          }\n          event.attributes.RESOLUTION = resolution;\n        }\n        if (event.attributes.BANDWIDTH) {\n          event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n        }\n        if (event.attributes['PROGRAM-ID']) {\n          event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n        }\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MEDIA:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-ENDLIST/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'endlist'\n      });\n      return;\n    }\n    match = /^#EXT-X-DISCONTINUITY/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'discontinuity'\n      });\n      return;\n    }\n    match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'program-date-time'\n      };\n      if (match[1]) {\n        event.dateTimeString = match[1];\n        event.dateTimeObject = new Date(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-KEY:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'key'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n        // parse the IV string into a Uint32Array\n        if (event.attributes.IV) {\n          if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n            event.attributes.IV = event.attributes.IV.substring(2);\n          }\n\n          event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n          event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n          event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n          event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n          event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n          event.attributes.IV = new Uint32Array(event.attributes.IV);\n        }\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-START:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'start'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n\n        event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n        event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out-cont'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-in'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n\n    // unknown tag type\n    this.trigger('data', {\n      type: 'tag',\n      data: line.slice(4)\n    });\n  };\n\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  ParseStream.prototype.addParser = function addParser(_ref) {\n    var _this2 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n        return true;\n      }\n    });\n  };\n\n  return ParseStream;\n}(Stream);\n\n/**\n * @file m3u8/parser.js\n */\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\nvar Parser = function (_Stream) {\n  inherits(Parser, _Stream);\n\n  function Parser() {\n    classCallCheck(this, Parser);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n    _this.lineStream.pipe(_this.parseStream);\n\n    /* eslint-disable consistent-this */\n    var self = _this;\n    /* eslint-enable consistent-this */\n    var uris = [];\n    var currentUri = {};\n    // if specified, the active EXT-X-MAP definition\n    var currentMap = void 0;\n    // if specified, the active decryption key\n    var _key = void 0;\n    var noop = function noop() {};\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    };\n    // group segments into numbered timelines delineated by discontinuities\n    var currentTimeline = 0;\n\n    // the manifest is empty until the parse stream begins delivering data\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    };\n\n    // update the manifest with the m3u8 entry from the parse stream\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup = void 0;\n      var rendition = void 0;\n\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              }\n              // clear the active encryption key\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              }\n\n              // setup an encryption key for upcoming segments\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              }\n\n              // find the media group, creating defaults as necessary\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']];\n\n              // collect the rendition metadata\n              rendition = {\n                'default': /yes/i.test(entry.attributes.DEFAULT)\n              };\n              if (rendition['default']) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              }\n\n              // insert the new rendition\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri);\n\n          // if no explicit duration was declared, use the target duration\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          }\n          // annotate with encryption information, if necessary\n          if (_key) {\n            currentUri.key = _key;\n          }\n          currentUri.timeline = currentTimeline;\n          // annotate with initialization segment information, if necessary\n          if (currentMap) {\n            currentUri.map = currentMap;\n          }\n\n          // prepare for the next URI\n          currentUri = {};\n        },\n        comment: function comment() {\n          // comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data;\n            // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n    return _this;\n  }\n\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {String} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  Parser.prototype.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  };\n\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  Parser.prototype.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  };\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  Parser.prototype.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  };\n\n  return Parser;\n}(Stream);\n\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\nexport { LineStream, ParseStream, Parser };\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","/*! @name mpd-parser @version 0.7.0 @license Apache-2.0 */\nimport window$1 from 'global/window';\n\nvar version = \"0.7.0\";\n\nvar isObject = function isObject(obj) {\n  return !!obj && typeof obj === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n    Object.keys(source).forEach(function (key) {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nvar values = function values(o) {\n  return Object.keys(o).map(function (k) {\n    return o[k];\n  });\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nvar findIndexes = function findIndexes(l, key) {\n  return l.reduce(function (a, e, i) {\n    if (e[key]) {\n      a.push(i);\n    }\n\n    return a;\n  }, []);\n};\n\nvar mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n  var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    var name = playlist.attributes.id + (playlist.attributes.lang || ''); // Periods after first\n\n    if (acc[name]) {\n      var _acc$name$segments;\n\n      // first segment of subsequent periods signal a discontinuity\n      playlist.segments[0].discontinuity = true;\n\n      (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments); // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    } else {\n      // first Period\n      acc[name] = playlist;\n    }\n\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(function (playlist) {\n    playlist.discontinuityStarts = findIndexes(playlist.segments, 'discontinuity');\n    return playlist;\n  });\n};\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments;\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || 'main';\n    var language = playlist.attributes.lang || '';\n    var label = 'main';\n\n    if (language) {\n      label = playlist.attributes.lang + \" (\" + role + \")\";\n    } // skip if we already have the highest quality audio for a language\n\n\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      default: role === 'main',\n      playlists: [formatAudioPlaylist(playlist)],\n      uri: ''\n    };\n    return a;\n  }, {});\n};\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text'; // skip if we already have subtitles\n\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      default: false,\n      autoselect: false,\n      playlists: [formatVttPlaylist(playlist)],\n      uri: ''\n    };\n    return a;\n  }, {});\n};\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments;\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\nvar toM3u8 = function toM3u8(dashPlaylists) {\n  var _mediaGroups;\n\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all master attributes\n\n\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === void 0 ? 0 : _dashPlaylists$0$attr2;\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: videoPlaylists,\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists);\n  }\n\n  return master;\n};\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar urlToolkit = createCommonjsModule(function (module, exports) {\n// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  module.exports = URLToolkit;\n})(commonjsGlobal);\n/* jshint ignore:end */\n});\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = urlToolkit.buildAbsoluteURL(window$1.location.href, baseUrl);\n  }\n\n  return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls, follows\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === void 0 ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === void 0 ? '' : _ref$range;\n  var init = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range) {\n    var ranges = range.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10);\n    init.byterange = {\n      length: endRange - startRange,\n      offset: startRange\n    };\n  }\n\n  return init;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === void 0 ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === void 0 ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number: number,\n        duration: duration / timescale,\n        time: time,\n        timeline: timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static: function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === void 0 ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1; // final segment may be less than full segment duration\n\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return \"\" + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {\n    sourceURL: '',\n    range: ''\n  } : _attributes$initializ;\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(function (segment) {\n    return segment;\n  });\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n      duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: baseUrl,\n    range: indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  } // This is used for mediaSequence\n\n\n  segment.number = 0;\n  return [segment];\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n  var segmentAttributes;\n  var segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  if (!segmentsFn) {\n    return {\n      attributes: attributes\n    };\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  return {\n    attributes: segmentAttributes,\n    segments: segments\n  };\n};\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window$1.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({\n      tag: 'SegmentURL'\n    }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, {\n          baseUrl: baseUrl\n        })\n      };\n    });\n  };\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes: attributes\n      };\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\n\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = {\n      role: parseAttributes(role)\n    };\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, {\n        contentProtection: contentProtection\n      });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, index) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var parsedPeriodId = parseInt(periodAtt.id, 10); // fallback to mapping index if Period@id is not a number\n\n    var periodIndex = window$1.isNaN(parsedPeriodId) ? index : parsedPeriodId;\n    var periodAttributes = merge(mpdAttributes, {\n      periodIndex: periodIndex\n    });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nvar inheritAttributes = function inheritAttributes(mpd, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$manifestUri = _options.manifestUri,\n      manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n      _options$NOW = _options.NOW,\n      NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n      _options$clientOffset = _options.clientOffset,\n      clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n  var periods = findChildren(mpd, 'Period');\n\n  if (!periods.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window$1.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\nvar parse = function parse(manifestString, options) {\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)));\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };\n","var toUnsigned = function(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar findBox, parseType, timescale, startTime, getVideoTrackIds;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = toUnsigned(data[i]     << 24 |\n                       data[i + 1] << 16 |\n                       data[i + 2] <<  8 |\n                       data[i + 3]);\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\ngetVideoTrackIds = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var videoTrackIds = [];\n\n  traks.forEach(function(trak) {\n    var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n    var tkhds = findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function(hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n\n  return videoTrackIds;\n};\n\nmodule.exports = {\n  findBox: findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  videoTrackIds: getVideoTrackIds\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Functions that generate fragmented MP4s suitable for use with Media\n * Source Extensions.\n */\n'use strict';\n\nvar UINT32_MAX = Math.pow(2, 32) - 1;\n\nvar box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd,\n    trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex,\n    trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR,\n    AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n// pre-calculate constants\n(function() {\n  var i;\n  types = {\n    avc1: [], // codingname\n    avcC: [],\n    btrt: [],\n    dinf: [],\n    dref: [],\n    esds: [],\n    ftyp: [],\n    hdlr: [],\n    mdat: [],\n    mdhd: [],\n    mdia: [],\n    mfhd: [],\n    minf: [],\n    moof: [],\n    moov: [],\n    mp4a: [], // codingname\n    mvex: [],\n    mvhd: [],\n    sdtp: [],\n    smhd: [],\n    stbl: [],\n    stco: [],\n    stsc: [],\n    stsd: [],\n    stsz: [],\n    stts: [],\n    styp: [],\n    tfdt: [],\n    tfhd: [],\n    traf: [],\n    trak: [],\n    trun: [],\n    trex: [],\n    tkhd: [],\n    vmhd: []\n  };\n\n  // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n  // don't throw an error\n  if (typeof Uint8Array === 'undefined') {\n    return;\n  }\n\n  for (i in types) {\n    if (types.hasOwnProperty(i)) {\n      types[i] = [\n        i.charCodeAt(0),\n        i.charCodeAt(1),\n        i.charCodeAt(2),\n        i.charCodeAt(3)\n      ];\n    }\n  }\n\n  MAJOR_BRAND = new Uint8Array([\n    'i'.charCodeAt(0),\n    's'.charCodeAt(0),\n    'o'.charCodeAt(0),\n    'm'.charCodeAt(0)\n  ]);\n  AVC1_BRAND = new Uint8Array([\n    'a'.charCodeAt(0),\n    'v'.charCodeAt(0),\n    'c'.charCodeAt(0),\n    '1'.charCodeAt(0)\n  ]);\n  MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n  VIDEO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x56, 0x69, 0x64, 0x65,\n    0x6f, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n  ]);\n  AUDIO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x53, 0x6f, 0x75, 0x6e,\n    0x64, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n  ]);\n  HDLR_TYPES = {\n    video: VIDEO_HDLR,\n    audio: AUDIO_HDLR\n  };\n  DREF = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version 0\n    0x00, 0x00, 0x01 // entry_flags\n  ]);\n  SMHD = new Uint8Array([\n    0x00,             // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00,       // balance, 0 means centered\n    0x00, 0x00        // reserved\n  ]);\n  STCO = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ]);\n  STSC = STCO;\n  STSZ = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]);\n  STTS = STCO;\n  VMHD = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphicsmode\n    0x00, 0x00,\n    0x00, 0x00,\n    0x00, 0x00 // opcolor\n  ]);\n}());\n\nbox = function(type) {\n  var\n    payload = [],\n    size = 0,\n    i,\n    result,\n    view;\n\n  for (i = 1; i < arguments.length; i++) {\n    payload.push(arguments[i]);\n  }\n\n  i = payload.length;\n\n  // calculate the total size we need to allocate\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n  result = new Uint8Array(size + 8);\n  view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n  view.setUint32(0, result.byteLength);\n  result.set(type, 4);\n\n  // copy the payload into the result\n  for (i = 0, size = 8; i < payload.length; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n  return result;\n};\n\ndinf = function() {\n  return box(types.dinf, box(types.dref, DREF));\n};\n\nesds = function(track) {\n  return box(types.esds, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n\n    // ES_Descriptor\n    0x03, // tag, ES_DescrTag\n    0x19, // length\n    0x00, 0x00, // ES_ID\n    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n    // DecoderConfigDescriptor\n    0x04, // tag, DecoderConfigDescrTag\n    0x11, // length\n    0x40, // object type\n    0x15,  // streamType\n    0x00, 0x06, 0x00, // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0, // maxBitrate\n    0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n    // DecoderSpecificInfo\n    0x05, // tag, DecoderSpecificInfoTag\n    0x02, // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    (track.audioobjecttype << 3) | (track.samplingfrequencyindex >>> 1),\n    (track.samplingfrequencyindex << 7) | (track.channelcount << 3),\n    0x06, 0x01, 0x02 // GASpecificConfig\n  ]));\n};\n\nftyp = function() {\n  return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n};\n\nhdlr = function(type) {\n  return box(types.hdlr, HDLR_TYPES[type]);\n};\nmdat = function(data) {\n  return box(types.mdat, data);\n};\nmdhd = function(track) {\n  var result = new Uint8Array([\n    0x00,                   // version 0\n    0x00, 0x00, 0x00,       // flags\n    0x00, 0x00, 0x00, 0x02, // creation_time\n    0x00, 0x00, 0x00, 0x03, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n    (track.duration >>> 24) & 0xFF,\n    (track.duration >>> 16) & 0xFF,\n    (track.duration >>>  8) & 0xFF,\n    track.duration & 0xFF,  // duration\n    0x55, 0xc4,             // 'und' language (undetermined)\n    0x00, 0x00\n  ]);\n\n  // Use the sample rate from the track metadata, when it is\n  // defined. The sample rate can be parsed out of an ADTS header, for\n  // instance.\n  if (track.samplerate) {\n    result[12] = (track.samplerate >>> 24) & 0xFF;\n    result[13] = (track.samplerate >>> 16) & 0xFF;\n    result[14] = (track.samplerate >>>  8) & 0xFF;\n    result[15] = (track.samplerate)        & 0xFF;\n  }\n\n  return box(types.mdhd, result);\n};\nmdia = function(track) {\n  return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n};\nmfhd = function(sequenceNumber) {\n  return box(types.mfhd, new Uint8Array([\n    0x00,\n    0x00, 0x00, 0x00, // flags\n    (sequenceNumber & 0xFF000000) >> 24,\n    (sequenceNumber & 0xFF0000) >> 16,\n    (sequenceNumber & 0xFF00) >> 8,\n    sequenceNumber & 0xFF // sequence_number\n  ]));\n};\nminf = function(track) {\n  return box(types.minf,\n             track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD),\n             dinf(),\n             stbl(track));\n};\nmoof = function(sequenceNumber, tracks) {\n  var\n    trackFragments = [],\n    i = tracks.length;\n  // build traf boxes for each track fragment\n  while (i--) {\n    trackFragments[i] = traf(tracks[i]);\n  }\n  return box.apply(null, [\n    types.moof,\n    mfhd(sequenceNumber)\n  ].concat(trackFragments));\n};\n/**\n * Returns a movie box.\n * @param tracks {array} the tracks associated with this movie\n * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n */\nmoov = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trak(tracks[i]);\n  }\n\n  return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n};\nmvex = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trex(tracks[i]);\n  }\n  return box.apply(null, [types.mvex].concat(boxes));\n};\nmvhd = function(duration) {\n  var\n    bytes = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24,\n      (duration & 0xFF0000) >> 16,\n      (duration & 0xFF00) >> 8,\n      duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n  return box(types.mvhd, bytes);\n};\n\nsdtp = function(track) {\n  var\n    samples = track.samples || [],\n    bytes = new Uint8Array(4 + samples.length),\n    flags,\n    i;\n\n  // leave the full box header (4 bytes) all zero\n\n  // write the sample table\n  for (i = 0; i < samples.length; i++) {\n    flags = samples[i].flags;\n\n    bytes[i + 4] = (flags.dependsOn << 4) |\n      (flags.isDependedOn << 2) |\n      (flags.hasRedundancy);\n  }\n\n  return box(types.sdtp,\n             bytes);\n};\n\nstbl = function(track) {\n  return box(types.stbl,\n             stsd(track),\n             box(types.stts, STTS),\n             box(types.stsc, STSC),\n             box(types.stsz, STSZ),\n             box(types.stco, STCO));\n};\n\n(function() {\n  var videoSample, audioSample;\n\n  stsd = function(track) {\n\n    return box(types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01\n    ]), track.type === 'video' ? videoSample(track) : audioSample(track));\n  };\n\n  videoSample = function(track) {\n    var\n      sps = track.sps || [],\n      pps = track.pps || [],\n      sequenceParameterSets = [],\n      pictureParameterSets = [],\n      i;\n\n    // assemble the SPSs\n    for (i = 0; i < sps.length; i++) {\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF)); // sequenceParameterSetLength\n      sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n    }\n\n    // assemble the PPSs\n    for (i = 0; i < pps.length; i++) {\n      pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n      pictureParameterSets.push((pps[i].byteLength & 0xFF));\n      pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n    }\n\n    return box(types.avc1, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (track.width & 0xff00) >> 8,\n      track.width & 0xff, // width\n      (track.height & 0xff00) >> 8,\n      track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x13,\n      0x76, 0x69, 0x64, 0x65,\n      0x6f, 0x6a, 0x73, 0x2d,\n      0x63, 0x6f, 0x6e, 0x74,\n      0x72, 0x69, 0x62, 0x2d,\n      0x68, 0x6c, 0x73, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11 // pre_defined = -1\n    ]), box(types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      track.profileIdc, // AVCProfileIndication\n      track.profileCompatibility, // profile_compatibility\n      track.levelIdc, // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n    ].concat([\n      sps.length // numOfSequenceParameterSets\n    ]).concat(sequenceParameterSets).concat([\n      pps.length // numOfPictureParameterSets\n    ]).concat(pictureParameterSets))), // \"PPS\"\n            box(types.btrt, new Uint8Array([\n              0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n              0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n              0x00, 0x2d, 0xc6, 0xc0\n            ])) // avgBitrate\n              );\n  };\n\n  audioSample = function(track) {\n    return box(types.mp4a, new Uint8Array([\n\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.channelcount & 0xff00) >> 8,\n      (track.channelcount & 0xff), // channelcount\n\n      (track.samplesize & 0xff00) >> 8,\n      (track.samplesize & 0xff), // samplesize\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n\n      (track.samplerate & 0xff00) >> 8,\n      (track.samplerate & 0xff),\n      0x00, 0x00 // samplerate, 16.16\n\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n    ]), esds(track));\n  };\n}());\n\ntkhd = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x07, // flags\n    0x00, 0x00, 0x00, 0x00, // creation_time\n    0x00, 0x00, 0x00, 0x00, // modification_time\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.duration & 0xFF000000) >> 24,\n    (track.duration & 0xFF0000) >> 16,\n    (track.duration & 0xFF00) >> 8,\n    track.duration & 0xFF, // duration\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, // layer\n    0x00, 0x00, // alternate_group\n    0x01, 0x00, // non-audio track volume\n    0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    (track.width & 0xFF00) >> 8,\n    track.width & 0xFF,\n    0x00, 0x00, // width\n    (track.height & 0xFF00) >> 8,\n    track.height & 0xFF,\n    0x00, 0x00 // height\n  ]);\n\n  return box(types.tkhd, result);\n};\n\n/**\n * Generate a track fragment (traf) box. A traf box collects metadata\n * about tracks in a movie fragment (moof) box.\n */\ntraf = function(track) {\n  var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun,\n      sampleDependencyTable, dataOffset,\n      upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n  trackFragmentHeader = box(types.tfhd, new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x3a, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x00, 0x00, 0x00  // default_sample_flags\n  ]));\n\n  upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n  lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n  trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([\n    0x01, // version 1\n    0x00, 0x00, 0x00, // flags\n    // baseMediaDecodeTime\n    (upperWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    upperWordBaseMediaDecodeTime & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    lowerWordBaseMediaDecodeTime & 0xFF\n  ]));\n\n  // the data offset specifies the number of bytes from the start of\n  // the containing moof to the first payload byte of the associated\n  // mdat\n  dataOffset = (32 + // tfhd\n                20 + // tfdt\n                8 +  // traf header\n                16 + // mfhd\n                8 +  // moof header\n                8);  // mdat header\n\n  // audio tracks require less metadata\n  if (track.type === 'audio') {\n    trackFragmentRun = trun(track, dataOffset);\n    return box(types.traf,\n               trackFragmentHeader,\n               trackFragmentDecodeTime,\n               trackFragmentRun);\n  }\n\n  // video tracks should contain an independent and disposable samples\n  // box (sdtp)\n  // generate one and adjust offsets to match\n  sampleDependencyTable = sdtp(track);\n  trackFragmentRun = trun(track,\n                          sampleDependencyTable.length + dataOffset);\n  return box(types.traf,\n             trackFragmentHeader,\n             trackFragmentDecodeTime,\n             trackFragmentRun,\n             sampleDependencyTable);\n};\n\n/**\n * Generate a track box.\n * @param track {object} a track definition\n * @return {Uint8Array} the track box\n */\ntrak = function(track) {\n  track.duration = track.duration || 0xffffffff;\n  return box(types.trak,\n             tkhd(track),\n             mdia(track));\n};\n\ntrex = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n  ]);\n  // the last two bytes of default_sample_flags is the sample\n  // degradation priority, a hint about the importance of this sample\n  // relative to others. Lower the degradation priority for all sample\n  // types other than video.\n  if (track.type !== 'video') {\n    result[result.length - 1] = 0x00;\n  }\n\n  return box(types.trex, result);\n};\n\n(function() {\n  var audioTrun, videoTrun, trunHeader;\n\n  // This method assumes all samples are uniform. That is, if a\n  // duration is present for the first sample, it will be present for\n  // all subsequent samples.\n  // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n  trunHeader = function(samples, offset) {\n    var durationPresent = 0, sizePresent = 0,\n        flagsPresent = 0, compositionTimeOffset = 0;\n\n    // trun flag constants\n    if (samples.length) {\n      if (samples[0].duration !== undefined) {\n        durationPresent = 0x1;\n      }\n      if (samples[0].size !== undefined) {\n        sizePresent = 0x2;\n      }\n      if (samples[0].flags !== undefined) {\n        flagsPresent = 0x4;\n      }\n      if (samples[0].compositionTimeOffset !== undefined) {\n        compositionTimeOffset = 0x8;\n      }\n    }\n\n    return [\n      0x00, // version 0\n      0x00,\n      durationPresent | sizePresent | flagsPresent | compositionTimeOffset,\n      0x01, // flags\n      (samples.length & 0xFF000000) >>> 24,\n      (samples.length & 0xFF0000) >>> 16,\n      (samples.length & 0xFF00) >>> 8,\n      samples.length & 0xFF, // sample_count\n      (offset & 0xFF000000) >>> 24,\n      (offset & 0xFF0000) >>> 16,\n      (offset & 0xFF00) >>> 8,\n      offset & 0xFF // data_offset\n    ];\n  };\n\n  videoTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (16 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF, // sample_size\n        (sample.flags.isLeading << 2) | sample.flags.dependsOn,\n        (sample.flags.isDependedOn << 6) |\n          (sample.flags.hasRedundancy << 4) |\n          (sample.flags.paddingValue << 1) |\n          sample.flags.isNonSyncSample,\n        sample.flags.degradationPriority & 0xF0 << 8,\n        sample.flags.degradationPriority & 0x0F, // sample_flags\n        (sample.compositionTimeOffset & 0xFF000000) >>> 24,\n        (sample.compositionTimeOffset & 0xFF0000) >>> 16,\n        (sample.compositionTimeOffset & 0xFF00) >>> 8,\n        sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n      ]);\n    }\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  audioTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (8 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF]); // sample_size\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  trun = function(track, offset) {\n    if (track.type === 'audio') {\n      return audioTrun(track, offset);\n    }\n\n    return videoTrun(track, offset);\n  };\n}());\n\nmodule.exports = {\n  ftyp: ftyp,\n  mdat: mdat,\n  moof: moof,\n  moov: moov,\n  initSegment: function(tracks) {\n    var\n      fileType = ftyp(),\n      movie = moov(tracks),\n      result;\n\n    result = new Uint8Array(fileType.byteLength + movie.byteLength);\n    result.set(fileType);\n    result.set(movie, fileType.byteLength);\n    return result;\n  }\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n","// Convert an array of nal units into an array of frames with each frame being\n// composed of the nal units that make up that frame\n// Also keep track of cummulative data about the frame from the nal units such\n// as the frame duration, starting pts, etc.\nvar groupNalsIntoFrames = function(nalUnits) {\n  var\n    i,\n    currentNal,\n    currentFrame = [],\n    frames = [];\n\n  currentFrame.byteLength = 0;\n\n  for (i = 0; i < nalUnits.length; i++) {\n    currentNal = nalUnits[i];\n\n    // Split on 'aud'-type nal units\n    if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n      // Since the very first nal unit is expected to be an AUD\n      // only push to the frames array when currentFrame is not empty\n      if (currentFrame.length) {\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        frames.push(currentFrame);\n      }\n      currentFrame = [currentNal];\n      currentFrame.byteLength = currentNal.data.byteLength;\n      currentFrame.pts = currentNal.pts;\n      currentFrame.dts = currentNal.dts;\n    } else {\n      // Specifically flag key frames for ease of use later\n      if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n        currentFrame.keyFrame = true;\n      }\n      currentFrame.duration = currentNal.dts - currentFrame.dts;\n      currentFrame.byteLength += currentNal.data.byteLength;\n      currentFrame.push(currentNal);\n    }\n  }\n\n  // For the last frame, use the duration of the previous frame if we\n  // have nothing better to go on\n  if (frames.length &&\n      (!currentFrame.duration ||\n       currentFrame.duration <= 0)) {\n    currentFrame.duration = frames[frames.length - 1].duration;\n  }\n\n  // Push the final frame\n  frames.push(currentFrame);\n  return frames;\n};\n\n// Convert an array of frames into an array of Gop with each Gop being composed\n// of the frames that make up that Gop\n// Also keep track of cummulative data about the Gop from the frames such as the\n// Gop duration, starting pts, etc.\nvar groupFramesIntoGops = function(frames) {\n  var\n    i,\n    currentFrame,\n    currentGop = [],\n    gops = [];\n\n  // We must pre-set some of the values on the Gop since we\n  // keep running totals of these values\n  currentGop.byteLength = 0;\n  currentGop.nalCount = 0;\n  currentGop.duration = 0;\n  currentGop.pts = frames[0].pts;\n  currentGop.dts = frames[0].dts;\n\n  // store some metadata about all the Gops\n  gops.byteLength = 0;\n  gops.nalCount = 0;\n  gops.duration = 0;\n  gops.pts = frames[0].pts;\n  gops.dts = frames[0].dts;\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    if (currentFrame.keyFrame) {\n      // Since the very first frame is expected to be an keyframe\n      // only push to the gops array when currentGop is not empty\n      if (currentGop.length) {\n        gops.push(currentGop);\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n      }\n\n      currentGop = [currentFrame];\n      currentGop.nalCount = currentFrame.length;\n      currentGop.byteLength = currentFrame.byteLength;\n      currentGop.pts = currentFrame.pts;\n      currentGop.dts = currentFrame.dts;\n      currentGop.duration = currentFrame.duration;\n    } else {\n      currentGop.duration += currentFrame.duration;\n      currentGop.nalCount += currentFrame.length;\n      currentGop.byteLength += currentFrame.byteLength;\n      currentGop.push(currentFrame);\n    }\n  }\n\n  if (gops.length && currentGop.duration <= 0) {\n    currentGop.duration = gops[gops.length - 1].duration;\n  }\n  gops.byteLength += currentGop.byteLength;\n  gops.nalCount += currentGop.nalCount;\n  gops.duration += currentGop.duration;\n\n  // push the final Gop\n  gops.push(currentGop);\n  return gops;\n};\n\n/*\n * Search for the first keyframe in the GOPs and throw away all frames\n * until that keyframe. Then extend the duration of the pulled keyframe\n * and pull the PTS and DTS of the keyframe so that it covers the time\n * range of the frames that were disposed.\n *\n * @param {Array} gops video GOPs\n * @returns {Array} modified video GOPs\n */\nvar extendFirstKeyFrame = function(gops) {\n  var currentGop;\n\n  if (!gops[0][0].keyFrame && gops.length > 1) {\n    // Remove the first GOP\n    currentGop = gops.shift();\n\n    gops.byteLength -= currentGop.byteLength;\n    gops.nalCount -= currentGop.nalCount;\n\n    // Extend the first frame of what is now the\n    // first gop to cover the time period of the\n    // frames we just removed\n    gops[0][0].dts = currentGop.dts;\n    gops[0][0].pts = currentGop.pts;\n    gops[0][0].duration += currentGop.duration;\n  }\n\n  return gops;\n};\n\n/**\n * Default sample object\n * see ISO/IEC 14496-12:2012, section 8.6.4.3\n */\nvar createDefaultSample = function() {\n  return {\n    size: 0,\n    flags: {\n      isLeading: 0,\n      dependsOn: 1,\n      isDependedOn: 0,\n      hasRedundancy: 0,\n      degradationPriority: 0,\n      isNonSyncSample: 1\n    }\n  };\n};\n\n/*\n * Collates information from a video frame into an object for eventual\n * entry into an MP4 sample table.\n *\n * @param {Object} frame the video frame\n * @param {Number} dataOffset the byte offset to position the sample\n * @return {Object} object containing sample table info for a frame\n */\nvar sampleForFrame = function(frame, dataOffset) {\n  var sample = createDefaultSample();\n\n  sample.dataOffset = dataOffset;\n  sample.compositionTimeOffset = frame.pts - frame.dts;\n  sample.duration = frame.duration;\n  sample.size = 4 * frame.length; // Space for nal unit size\n  sample.size += frame.byteLength;\n\n  if (frame.keyFrame) {\n    sample.flags.dependsOn = 2;\n    sample.flags.isNonSyncSample = 0;\n  }\n\n  return sample;\n};\n\n// generate the track's sample table from an array of gops\nvar generateSampleTable = function(gops, baseDataOffset) {\n  var\n    h, i,\n    sample,\n    currentGop,\n    currentFrame,\n    dataOffset = baseDataOffset || 0,\n    samples = [];\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      sample = sampleForFrame(currentFrame, dataOffset);\n\n      dataOffset += sample.size;\n\n      samples.push(sample);\n    }\n  }\n  return samples;\n};\n\n// generate the track's raw mdat data from an array of gops\nvar concatenateNalData = function(gops) {\n  var\n    h, i, j,\n    currentGop,\n    currentFrame,\n    currentNal,\n    dataOffset = 0,\n    nalsByteLength = gops.byteLength,\n    numberOfNals = gops.nalCount,\n    totalByteLength = nalsByteLength + 4 * numberOfNals,\n    data = new Uint8Array(totalByteLength),\n    view = new DataView(data.buffer);\n\n  // For each Gop..\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    // For each Frame..\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      // For each NAL..\n      for (j = 0; j < currentFrame.length; j++) {\n        currentNal = currentFrame[j];\n\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n    }\n  }\n  return data;\n};\n\nmodule.exports = {\n  groupNalsIntoFrames: groupNalsIntoFrames,\n  groupFramesIntoGops: groupFramesIntoGops,\n  extendFirstKeyFrame: extendFirstKeyFrame,\n  generateSampleTable: generateSampleTable,\n  concatenateNalData: concatenateNalData\n};\n","var highPrefix = [33, 16, 5, 32, 164, 27];\nvar lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\nvar zeroFill = function(count) {\n  var a = [];\n  while (count--) {\n    a.push(0);\n  }\n  return a;\n};\n\nvar makeTable = function(metaTable) {\n  return Object.keys(metaTable).reduce(function(obj, key) {\n    obj[key] = new Uint8Array(metaTable[key].reduce(function(arr, part) {\n      return arr.concat(part);\n    }, []));\n    return obj;\n  }, {});\n};\n\n// Frames-of-silence to use for filling in missing AAC frames\nvar coneOfSilence = {\n  96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n  88200: [highPrefix, [231], zeroFill(170), [56]],\n  64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n  48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n  44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n  32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n  24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n  16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n  12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n  11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n  8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n};\n\nmodule.exports = makeTable(coneOfSilence);\n","var\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\nmodule.exports = {\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs\n};\n","var coneOfSilence = require('../data/silence');\nvar clock = require('../utils/clock');\n\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Sum the `byteLength` properties of the data in each AAC frame\n */\nvar sumFrameByteLengths = function(array) {\n  var\n    i,\n    currentObj,\n    sum = 0;\n\n  // sum the byteLength's all each nal unit in the frame\n  for (i = 0; i < array.length; i++) {\n    currentObj = array[i];\n    sum += currentObj.data.byteLength;\n  }\n\n  return sum;\n};\n\n// Possibly pad (prefix) the audio track with silence if appending this track\n// would lead to the introduction of a gap in the audio buffer\nvar prefixWithSilence = function(\n  track,\n  frames,\n  audioAppendStartTs,\n  videoBaseMediaDecodeTime\n) {\n  var\n    baseMediaDecodeTimeTs,\n    frameDuration = 0,\n    audioGapDuration = 0,\n    audioFillFrameCount = 0,\n    audioFillDuration = 0,\n    silentFrame,\n    i;\n\n  if (!frames.length) {\n    return;\n  }\n\n  baseMediaDecodeTimeTs =\n    clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n  // determine frame clock duration based on sample rate, round up to avoid overfills\n  frameDuration = Math.ceil(ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n  if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n    // insert the shortest possible amount (audio gap or audio to video gap)\n    audioGapDuration =\n      baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n    // number of full frames in the audio gap\n    audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n    audioFillDuration = audioFillFrameCount * frameDuration;\n  }\n\n  // don't attempt to fill gaps smaller than a single frame or larger\n  // than a half second\n  if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS / 2) {\n    return;\n  }\n\n  silentFrame = coneOfSilence[track.samplerate];\n\n  if (!silentFrame) {\n    // we don't have a silent frame pregenerated for the sample rate, so use a frame\n    // from the content instead\n    silentFrame = frames[0].data;\n  }\n\n  for (i = 0; i < audioFillFrameCount; i++) {\n    frames.splice(i, 0, {\n      data: silentFrame\n    });\n  }\n\n  track.baseMediaDecodeTime -=\n    Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n};\n\n// If the audio segment extends before the earliest allowed dts\n// value, remove AAC frames until starts at or after the earliest\n// allowed DTS so that we don't end up with a negative baseMedia-\n// DecodeTime for the audio track\nvar trimAdtsFramesByEarliestDts = function(adtsFrames, track, earliestAllowedDts) {\n  if (track.minSegmentDts >= earliestAllowedDts) {\n    return adtsFrames;\n  }\n\n  // We will need to recalculate the earliest segment Dts\n  track.minSegmentDts = Infinity;\n\n  return adtsFrames.filter(function(currentFrame) {\n    // If this is an allowed frame, keep it and record it's Dts\n    if (currentFrame.dts >= earliestAllowedDts) {\n      track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n      track.minSegmentPts = track.minSegmentDts;\n      return true;\n    }\n    // Otherwise, discard it\n    return false;\n  });\n};\n\n// generate the track's raw mdat data from an array of frames\nvar generateSampleTable = function(frames) {\n  var\n    i,\n    currentFrame,\n    samples = [];\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n    samples.push({\n      size: currentFrame.data.byteLength,\n      duration: 1024 // For AAC audio, all samples contain 1024 samples\n    });\n  }\n  return samples;\n};\n\n// generate the track's sample table from an array of frames\nvar concatenateFrameData = function(frames) {\n  var\n    i,\n    currentFrame,\n    dataOffset = 0,\n    data = new Uint8Array(sumFrameByteLengths(frames));\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    data.set(currentFrame.data, dataOffset);\n    dataOffset += currentFrame.data.byteLength;\n  }\n  return data;\n};\n\nmodule.exports = {\n  prefixWithSilence: prefixWithSilence,\n  trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n  generateSampleTable: generateSampleTable,\n  concatenateFrameData: concatenateFrameData\n};\n","var ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\nvar collectDtsInfo = function(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\nvar clearDtsInfo = function(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n * @param track {object} track metadata configuration\n * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nvar calculateTrackBaseMediaDecodeTime = function(track, keepOriginalTimestamps) {\n  var\n    baseMediaDecodeTime,\n    scale,\n    minSegmentDts = track.minSegmentDts;\n\n  // Optionally adjust the time so the first segment starts at zero.\n  if (!keepOriginalTimestamps) {\n    minSegmentDts -= track.timelineStartInfo.dts;\n  }\n\n  // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n  baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n  // Add to that the distance this segment is from the very first\n  baseMediaDecodeTime += minSegmentDts;\n\n  // baseMediaDecodeTime must not become negative\n  baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / ONE_SECOND_IN_TS;\n    baseMediaDecodeTime *= scale;\n    baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n  }\n\n  return baseMediaDecodeTime;\n};\n\nmodule.exports = {\n  clearDtsInfo: clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n  collectDtsInfo: collectDtsInfo\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\nvar parseSei = function(bytes) {\n  var\n    i = 0,\n    result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n    payloadType = 0,\n    payloadSize = 0;\n\n  // go through the sei_rbsp parsing each each individual sei_message\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    }\n\n    // Parse payload type\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n    payloadType += bytes[i++];\n\n    // Parse payload size\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n    payloadSize += bytes[i++];\n\n    // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    }\n\n    // skip the payload and parse the next message\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n};\n\n// see ANSI/SCTE 128-1 (2013), section 8.1\nvar parseUserData = function(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  }\n\n  // itu_t_t35_provider_code should be 49 (ATSC) for captions\n  if (((sei.payload[1] << 8) | sei.payload[2]) !== 49) {\n    return null;\n  }\n\n  // the user_identifier should be \"GA94\" to indicate ATSC1 data\n  if (String.fromCharCode(sei.payload[3],\n                          sei.payload[4],\n                          sei.payload[5],\n                          sei.payload[6]) !== 'GA94') {\n    return null;\n  }\n\n  // finally, user_data_type_code should be 0x03 for caption data\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  }\n\n  // return the user_data_type_structure and strip the trailing\n  // marker bits\n  return sei.payload.subarray(8, sei.payload.length - 1);\n};\n\n// see CEA-708-D, section 4.4\nvar parseCaptionPackets = function(pts, userData) {\n  var results = [], i, count, offset, data;\n\n  // if this is just filler, return immediately\n  if (!(userData[0] & 0x40)) {\n    return results;\n  }\n\n  // parse out the cc_data_1 and cc_data_2 fields\n  count = userData[0] & 0x1f;\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    };\n\n    // capture cc data when cc_valid is 1\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = (userData[offset + 3] << 8) | userData[offset + 4];\n      results.push(data);\n    }\n  }\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n};\n\n// exports\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function() {\n\n  CaptionStream.prototype.init.call(this);\n\n  this.captionPackets_ = [];\n\n  this.ccStreams_ = [\n    new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n\n  this.reset();\n\n  // forward data and done events from CCs to this CaptionStream\n  this.ccStreams_.forEach(function(cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n\n};\n\nCaptionStream.prototype = new Stream();\nCaptionStream.prototype.push = function(event) {\n  var sei, userData, newCaptionPackets;\n\n  // only examine SEI NALs\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  }\n\n  // parse the sei\n  sei = cea708Parser.parseSei(event.escapedRBSP);\n\n  // ignore everything but user_data_registered_itu_t_t35\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  }\n\n  // parse out the user data payload\n  userData = cea708Parser.parseUserData(sei);\n\n  // ignore unrecognized userData\n  if (!userData) {\n    return;\n  }\n\n  // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if ((event.dts === this.latestDts_) && (this.ignoreNextEqualDts_)) {\n    this.numSameDts_--;\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n    return;\n  }\n\n  // parse out CC data packets and save them for later\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flush = function() {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.ccStreams_.forEach(function(cc) {\n      cc.flush();\n    }, this);\n    return;\n  }\n\n  // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n  this.captionPackets_.forEach(function(elem, idx) {\n    elem.presortIndex = idx;\n  });\n\n  // sort caption byte-pairs based on their PTS values\n  this.captionPackets_.sort(function(a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n    return a.pts - b.pts;\n  });\n\n  this.captionPackets_.forEach(function(packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    }\n    // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n  }, this);\n\n  this.captionPackets_.length = 0;\n  this.ccStreams_.forEach(function(cc) {\n    cc.flush();\n  }, this);\n  return;\n};\n\nCaptionStream.prototype.reset = function() {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function(ccStream) {\n    ccStream.reset();\n  });\n};\n\nCaptionStream.prototype.dispatchCea608Packet = function(packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, discard the\n    // data; we don't want jumbled captions\n    return;\n  }\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1000);\n};\nCaptionStream.prototype.setsChannel2Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1800);\n};\n\n// ----------------------\n// Session to Application\n// ----------------------\n\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,     // á\n  0x5c: 0xe9,     // é\n  0x5e: 0xed,     // í\n  0x5f: 0xf3,     // ó\n  0x60: 0xfa,     // ú\n  0x7b: 0xe7,     // ç\n  0x7c: 0xf7,     // ÷\n  0x7d: 0xd1,     // Ñ\n  0x7e: 0xf1,     // ñ\n  0x7f: 0x2588,   // █\n  0x0130: 0xae,   // ®\n  0x0131: 0xb0,   // °\n  0x0132: 0xbd,   // ½\n  0x0133: 0xbf,   // ¿\n  0x0134: 0x2122, // ™\n  0x0135: 0xa2,   // ¢\n  0x0136: 0xa3,   // £\n  0x0137: 0x266a, // ♪\n  0x0138: 0xe0,   // à\n  0x0139: 0xa0,   //\n  0x013a: 0xe8,   // è\n  0x013b: 0xe2,   // â\n  0x013c: 0xea,   // ê\n  0x013d: 0xee,   // î\n  0x013e: 0xf4,   // ô\n  0x013f: 0xfb,   // û\n  0x0220: 0xc1,   // Á\n  0x0221: 0xc9,   // É\n  0x0222: 0xd3,   // Ó\n  0x0223: 0xda,   // Ú\n  0x0224: 0xdc,   // Ü\n  0x0225: 0xfc,   // ü\n  0x0226: 0x2018, // ‘\n  0x0227: 0xa1,   // ¡\n  0x0228: 0x2a,   // *\n  0x0229: 0x27,   // '\n  0x022a: 0x2014, // —\n  0x022b: 0xa9,   // ©\n  0x022c: 0x2120, // ℠\n  0x022d: 0x2022, // •\n  0x022e: 0x201c, // “\n  0x022f: 0x201d, // ”\n  0x0230: 0xc0,   // À\n  0x0231: 0xc2,   // Â\n  0x0232: 0xc7,   // Ç\n  0x0233: 0xc8,   // È\n  0x0234: 0xca,   // Ê\n  0x0235: 0xcb,   // Ë\n  0x0236: 0xeb,   // ë\n  0x0237: 0xce,   // Î\n  0x0238: 0xcf,   // Ï\n  0x0239: 0xef,   // ï\n  0x023a: 0xd4,   // Ô\n  0x023b: 0xd9,   // Ù\n  0x023c: 0xf9,   // ù\n  0x023d: 0xdb,   // Û\n  0x023e: 0xab,   // «\n  0x023f: 0xbb,   // »\n  0x0320: 0xc3,   // Ã\n  0x0321: 0xe3,   // ã\n  0x0322: 0xcd,   // Í\n  0x0323: 0xcc,   // Ì\n  0x0324: 0xec,   // ì\n  0x0325: 0xd2,   // Ò\n  0x0326: 0xf2,   // ò\n  0x0327: 0xd5,   // Õ\n  0x0328: 0xf5,   // õ\n  0x0329: 0x7b,   // {\n  0x032a: 0x7d,   // }\n  0x032b: 0x5c,   // \\\n  0x032c: 0x5e,   // ^\n  0x032d: 0x5f,   // _\n  0x032e: 0x7c,   // |\n  0x032f: 0x7e,   // ~\n  0x0330: 0xc4,   // Ä\n  0x0331: 0xe4,   // ä\n  0x0332: 0xd6,   // Ö\n  0x0333: 0xf6,   // ö\n  0x0334: 0xdf,   // ß\n  0x0335: 0xa5,   // ¥\n  0x0336: 0xa4,   // ¤\n  0x0337: 0x2502, // │\n  0x0338: 0xc5,   // Å\n  0x0339: 0xe5,   // å\n  0x033a: 0xd8,   // Ø\n  0x033b: 0xf8,   // ø\n  0x033c: 0x250c, // ┌\n  0x033d: 0x2510, // ┐\n  0x033e: 0x2514, // └\n  0x033f: 0x2518  // ┘\n};\n\nvar getCharFromCode = function(code) {\n  if (code === null) {\n    return '';\n  }\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n};\n\n// the index of the last row in a CEA-608 display buffer\nvar BOTTOM_ROW = 14;\n\n// This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620,\n            0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n// CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\nvar createDisplayBuffer = function() {\n  var result = [], i = BOTTOM_ROW + 1;\n  while (i--) {\n    result.push('');\n  }\n  return result;\n};\n\nvar Cea608Stream = function(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n\n  this.name_ = 'CC' + (((this.field_ << 1) | this.dataChannel_) + 1);\n\n  this.setConstants();\n  this.reset();\n\n  this.push = function(packet) {\n    var data, swap, char0, char1, text;\n    // remove the parity bits\n    data = packet.ccData & 0x7f7f;\n\n    // ignore duplicate control codes; the spec demands they're sent twice\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    }\n\n    // Store control codes\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts);\n      // if a caption was being displayed, it's gone now\n      this.flushDisplayed(packet.pts);\n\n      // flip memory\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap;\n\n      // start measuring the time to display the caption\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts;\n\n    // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts);\n\n      // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n    // Detect offset control codes and adjust cursor\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += (char1 & 0x03);\n\n    // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20);\n\n      // Configure the caption window if we're in roll-up mode\n      if (this.mode_ === 'rollUp') {\n        // This implies that the base row is incorrectly set.\n        // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n        // of roll-up rows set.\n        if (row - this.rollUpRows_ + 1 < 0) {\n          row = this.rollUpRows_ - 1;\n        }\n\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      }\n      // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n      if ((char1 & 0x1) && (this.formatting_.indexOf('u') === -1)) {\n          this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      }\n\n    // We have a normal character in char0, and possibly one in char1\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n\n    } // finish data processing\n\n  };\n};\nCea608Stream.prototype = new Stream();\n// Trigger a cue point that captures the current state of the\n// display buffer\nCea608Stream.prototype.flushDisplayed = function(pts) {\n  var content = this.displayed_\n    // remove spaces from the start and end of the string\n    .map(function(row) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        // eslint-disable-next-line no-console\n        console.error('Skipping malformed caption.');\n        return '';\n      }\n    })\n    // combine all text rows to display in one cue\n    .join('\\n')\n    // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n\n/**\n * Zero out the data, used for startup and on seek\n */\nCea608Stream.prototype.reset = function() {\n  this.mode_ = 'popOn';\n  // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null;\n\n  // Track row and column for proper line-breaking and spacing\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2;\n\n  // This variable holds currently-applied formatting\n  this.formatting_ = [];\n};\n\n/**\n * Sets up control code and related constants for this instance\n */\nCea608Stream.prototype.setConstants = function() {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_     = 0x10;\n    this.EXT_      = 0x11;\n    this.CONTROL_  = (0x14 | this.field_) << 8;\n    this.OFFSET_   = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_     = 0x18;\n    this.EXT_      = 0x19;\n    this.CONTROL_  = (0x1c | this.field_) << 8;\n    this.OFFSET_   = 0x1f;\n  }\n\n  // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n  this.PADDING_                    = 0x0000;\n  // Pop-on Mode\n  this.RESUME_CAPTION_LOADING_     = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_             = this.CONTROL_ | 0x2f;\n  // Roll-up Mode\n  this.ROLL_UP_2_ROWS_             = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_             = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_             = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_            = this.CONTROL_ | 0x2d;\n  // paint-on mode\n  this.RESUME_DIRECT_CAPTIONING_   = this.CONTROL_ | 0x29;\n  // Erasure\n  this.BACKSPACE_                  = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_     = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\nCea608Stream.prototype.isSpecialCharacter = function(char0, char1) {\n  return (char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f);\n};\n\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\nCea608Stream.prototype.isExtCharacter = function(char0, char1) {\n  return ((char0 === (this.EXT_ + 1) || char0 === (this.EXT_ + 2)) &&\n    (char1 >= 0x20 && char1 <= 0x3f));\n};\n\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\nCea608Stream.prototype.isMidRowCode = function(char0, char1) {\n  return (char0 === this.EXT_ && (char1 >= 0x20 && char1 <= 0x2f));\n};\n\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\nCea608Stream.prototype.isOffsetControlCode = function(char0, char1) {\n  return (char0 === this.OFFSET_ && (char1 >= 0x21 && char1 <= 0x23));\n};\n\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\nCea608Stream.prototype.isPAC = function(char0, char1) {\n  return (char0 >= this.BASE_ && char0 < (this.BASE_ + 8) &&\n    (char1 >= 0x40 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\nCea608Stream.prototype.isColorPAC = function(char1) {\n  return ((char1 >= 0x40 && char1 <= 0x4f) || (char1 >= 0x60 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\nCea608Stream.prototype.isNormalChar = function(char) {\n  return (char >= 0x20 && char <= 0x7f);\n};\n\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\nCea608Stream.prototype.setRollUp = function(pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp';\n    // Spec says to wipe memories when switching to roll-up\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n};\n\n// Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\nCea608Stream.prototype.addFormatting = function(pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function(text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n};\n\n// Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\nCea608Stream.prototype.clearFormatting = function(pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n  var text = this.formatting_.reverse().reduce(function(text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n};\n\n// Mode Implementations\nCea608Stream.prototype.popOn = function(pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_];\n\n  // buffer characters\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function() {\n  var i;\n  // clear out inactive rows\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  }\n  // shift displayed rows up\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  }\n  // clear out the bottom row\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\n// exports\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};\n","'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  this.type_ = type;\n\n  this.push = function(data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n","/**\n * Accepts program elementary stream (PES) data events and parses out\n * ID3 metadata from them, if present.\n * @see http://id3.org/id3v2.3.0\n */\n'use strict';\nvar\n  Stream = require('../utils/stream'),\n  StreamTypes = require('./stream-types'),\n  // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n  percentEncode = function(bytes, start, end) {\n    var i, result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as UTf-8.\n  parseUtf8 = function(bytes, start, end) {\n    return decodeURIComponent(percentEncode(bytes, start, end));\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n  parseIso88591 = function(bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  },\n  parseSyncSafeInteger = function(data) {\n    return (data[0] << 21) |\n            (data[1] << 14) |\n            (data[2] << 7) |\n            (data[3]);\n  },\n  tagParsers = {\n    TXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the text fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          // do not include the null terminator in the tag value\n          tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n          break;\n        }\n      }\n      tag.data = tag.value;\n    },\n    WXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n          break;\n        }\n      }\n    },\n    PRIV: function(tag) {\n      var i;\n\n      for (i = 0; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.owner = parseIso88591(tag.data, 0, i);\n          break;\n        }\n      }\n      tag.privateData = tag.data.subarray(i + 1);\n      tag.data = tag.privateData;\n    }\n  },\n  MetadataStream;\n\nMetadataStream = function(options) {\n  var\n    settings = {\n      debug: !!(options && options.debug),\n\n      // the bytes of the program-level descriptor field in MP2T\n      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n      // program element descriptors\"\n      descriptor: options && options.descriptor\n    },\n    // the total size in bytes of the ID3 tag being parsed\n    tagSize = 0,\n    // tag data that is not complete enough to be parsed\n    buffer = [],\n    // the total number of bytes currently in the buffer\n    bufferSize = 0,\n    i;\n\n  MetadataStream.prototype.init.call(this);\n\n  // calculate the text track in-band metadata track dispatch type\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n  this.dispatchType = StreamTypes.METADATA_STREAM_TYPE.toString(16);\n  if (settings.descriptor) {\n    for (i = 0; i < settings.descriptor.length; i++) {\n      this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n    }\n  }\n\n  this.push = function(chunk) {\n    var tag, frameStart, frameSize, frame, i, frameHeader;\n    if (chunk.type !== 'timed-metadata') {\n      return;\n    }\n\n    // if data_alignment_indicator is set in the PES header,\n    // we must have the start of a new ID3 tag. Assume anything\n    // remaining in the buffer was malformed and throw it out\n    if (chunk.dataAlignmentIndicator) {\n      bufferSize = 0;\n      buffer.length = 0;\n    }\n\n    // ignore events that don't look like ID3 data\n    if (buffer.length === 0 &&\n        (chunk.data.length < 10 ||\n          chunk.data[0] !== 'I'.charCodeAt(0) ||\n          chunk.data[1] !== 'D'.charCodeAt(0) ||\n          chunk.data[2] !== '3'.charCodeAt(0))) {\n      if (settings.debug) {\n        // eslint-disable-next-line no-console\n        console.log('Skipping unrecognized metadata packet');\n      }\n      return;\n    }\n\n    // add this chunk to the data we've collected so far\n\n    buffer.push(chunk);\n    bufferSize += chunk.data.byteLength;\n\n    // grab the size of the entire frame from the ID3 header\n    if (buffer.length === 1) {\n      // the frame size is transmitted as a 28-bit integer in the\n      // last four bytes of the ID3 header.\n      // The most significant bit of each byte is dropped and the\n      // results concatenated to recover the actual value.\n      tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n      // ID3 reports the tag size excluding the header but it's more\n      // convenient for our comparisons to include it\n      tagSize += 10;\n    }\n\n    // if the entire frame has not arrived, wait for more data\n    if (bufferSize < tagSize) {\n      return;\n    }\n\n    // collect the entire frame so it can be parsed\n    tag = {\n      data: new Uint8Array(tagSize),\n      frames: [],\n      pts: buffer[0].pts,\n      dts: buffer[0].dts\n    };\n    for (i = 0; i < tagSize;) {\n      tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n      i += buffer[0].data.byteLength;\n      bufferSize -= buffer[0].data.byteLength;\n      buffer.shift();\n    }\n\n    // find the start of the first frame and the end of the tag\n    frameStart = 10;\n    if (tag.data[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n      frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n      // clip any padding off the end\n      tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n    }\n\n    // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n         // eslint-disable-next-line no-console\n        return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n      }\n      frameHeader = String.fromCharCode(tag.data[frameStart],\n                                        tag.data[frameStart + 1],\n                                        tag.data[frameStart + 2],\n                                        tag.data[frameStart + 3]);\n\n\n      frame = {\n        id: frameHeader,\n        data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id;\n      if (tagParsers[frame.id]) {\n        tagParsers[frame.id](frame);\n\n        // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var\n            d = frame.data,\n            size = ((d[3] & 0x01)  << 30) |\n                   (d[4]  << 22) |\n                   (d[5] << 14) |\n                   (d[6] << 6) |\n                   (d[7] >>> 2);\n\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size;\n          // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n      }\n      tag.frames.push(frame);\n\n      frameStart += 10; // advance past the frame header\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    this.trigger('data', tag);\n  };\n};\nMetadataStream.prototype = new Stream();\n\nmodule.exports = MetadataStream;\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js'),\n  CaptionStream = require('./caption-stream'),\n  StreamTypes = require('./stream-types'),\n  TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js');\n\n// object types\nvar TransportPacketStream, TransportParseStream, ElementaryStream;\n\n// constants\nvar\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\nTransportPacketStream = function() {\n  var\n    buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n    bytesInBuffer = 0;\n\n  TransportPacketStream.prototype.init.call(this);\n\n   // Deliver new bytes to the stream.\n\n  /**\n   * Split a stream of data into M2TS packets\n  **/\n  this.push = function(bytes) {\n    var\n      startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      everything;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    }\n\n    // While we have enough data for a packet\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      }\n      // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n      startIndex++;\n      endIndex++;\n    }\n\n    // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n\n  /**\n   * Passes identified M2TS packets to the TransportParseStream to be parsed\n  **/\n  this.flush = function() {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n    this.trigger('done');\n  };\n};\nTransportPacketStream.prototype = new Stream();\n\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\nTransportParseStream = function() {\n  var parsePsi, parsePat, parsePmt, self;\n  TransportParseStream.prototype.init.call(this);\n  self = this;\n\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function(payload, psi) {\n    var offset = 0;\n\n    // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n    // skip the PSI header and parse the first PMT entry\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n  parsePmt = function(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset;\n\n    // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n    if (!(payload[5] & 0x01)) {\n      return;\n    }\n\n    // overwrite any existing program map table\n    self.programMapTable = {\n      video: null,\n      audio: null,\n      'timed-metadata': {}\n    };\n\n    // the mapping table ends at the end of the current section\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4;\n\n    // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n    // advance the offset to the first entry in the mapping table\n    offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var streamType = payload[offset];\n      var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n      // only map a single elementary_pid for audio and video stream types\n      // TODO: should this be done for metadata too? for now maintain behavior of\n      //       multiple metadata streams\n      if (streamType === StreamTypes.H264_STREAM_TYPE &&\n          self.programMapTable.video === null) {\n        self.programMapTable.video = pid;\n      } else if (streamType === StreamTypes.ADTS_STREAM_TYPE &&\n                 self.programMapTable.audio === null) {\n        self.programMapTable.audio = pid;\n      } else if (streamType === StreamTypes.METADATA_STREAM_TYPE) {\n        // map pid to stream type for metadata streams\n        self.programMapTable['timed-metadata'][pid] = streamType;\n      }\n\n      // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    }\n\n    // record the map on the packet as well\n    pmt.programMapTable = self.programMapTable;\n  };\n\n  /**\n   * Deliver a new MP2T packet to the next stream in the pipeline.\n   */\n  this.push = function(packet) {\n    var\n      result = {},\n      offset = 4;\n\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n    // pid is a 13-bit field starting at the last bit of packet[1]\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2];\n\n    // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n    if (((packet[3] & 0x30) >>> 4) > 0x01) {\n      offset += packet[offset] + 1;\n    }\n\n    // parse the rest of the packet based on the type\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n\n      // if there are any packets waiting for a PMT to be found, process them now\n      while (this.packetsWaitingForPmt.length) {\n        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n      }\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function(packet, offset, result) {\n    // set the appropriate stream type\n    if (result.pid === this.programMapTable.video) {\n      result.streamType = StreamTypes.H264_STREAM_TYPE;\n    } else if (result.pid === this.programMapTable.audio) {\n      result.streamType = StreamTypes.ADTS_STREAM_TYPE;\n    } else {\n      // if not video or audio, it is timed-metadata or unknown\n      // if unknown, streamType will be undefined\n      result.streamType = this.programMapTable['timed-metadata'][result.pid];\n    }\n\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n\n    this.trigger('data', result);\n  };\n\n};\nTransportParseStream.prototype = new Stream();\nTransportParseStream.STREAM_TYPES  = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\nElementaryStream = function() {\n  var\n    self = this,\n    // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n    audio = {\n      data: [],\n      size: 0\n    },\n    timedMetadata = {\n      data: [],\n      size: 0\n    },\n    parsePes = function(payload, pes) {\n      var ptsDtsFlags;\n\n      // get the packet length, this will be 0 for video\n      pes.packetLength = 6 + ((payload[4] << 8) | payload[5]);\n\n      // find out if this packets starts a new keyframe\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n      // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n      ptsDtsFlags = payload[7];\n\n      // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 |\n          (payload[10] & 0xFF) << 20 |\n          (payload[11] & 0xFE) << 12 |\n          (payload[12] & 0xFF) <<  5 |\n          (payload[13] & 0xFE) >>>  3;\n        pes.pts *= 4; // Left shift by 2\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n        pes.dts = pes.pts;\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 |\n            (payload[15] & 0xFF) << 20 |\n            (payload[16] & 0xFE) << 12 |\n            (payload[17] & 0xFF) << 5 |\n            (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n      // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n    /**\n      * Pass completely parsed PES packets to the next stream in the pipeline\n     **/\n    flushStream = function(stream, type, forceFlush) {\n      var\n        packetData = new Uint8Array(stream.size),\n        event = {\n          type: type\n        },\n        i = 0,\n        offset = 0,\n        packetFlushable = false,\n        fragment;\n\n      // do nothing if there is not enough buffered data for a complete\n      // PES header\n      if (!stream.data.length || stream.size < 9) {\n        return;\n      }\n      event.trackId = stream.data[0].pid;\n\n      // reassemble the packet\n      for (i = 0; i < stream.data.length; i++) {\n        fragment = stream.data[i];\n\n        packetData.set(fragment.data, offset);\n        offset += fragment.data.byteLength;\n      }\n\n      // parse assembled packet's PES header\n      parsePes(packetData, event);\n\n      // non-video PES packets MUST have a non-zero PES_packet_length\n      // check that there is enough stream data to fill the packet\n      packetFlushable = type === 'video' || event.packetLength <= stream.size;\n\n      // flush pending packets if the conditions are right\n      if (forceFlush || packetFlushable) {\n        stream.size = 0;\n        stream.data.length = 0;\n      }\n\n      // only emit packets that are complete. this is to avoid assembling\n      // incomplete PES packets due to poor segmentation\n      if (packetFlushable) {\n        self.trigger('data', event);\n      }\n    };\n\n  ElementaryStream.prototype.init.call(this);\n\n  /**\n   * Identifies M2TS packet types and parses PES packets using metadata\n   * parsed from the PMT\n   **/\n  this.push = function(data) {\n    ({\n      pat: function() {\n        // we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n        case StreamTypes.H264_STREAM_TYPE:\n        case m2tsStreamTypes.H264_STREAM_TYPE:\n          stream = video;\n          streamType = 'video';\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          stream = audio;\n          streamType = 'audio';\n          break;\n        case StreamTypes.METADATA_STREAM_TYPE:\n          stream = timedMetadata;\n          streamType = 'timed-metadata';\n          break;\n        default:\n          // ignore unknown stream types\n          return;\n        }\n\n        // if a new packet is starting, we can flush the completed\n        // packet\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType, true);\n        }\n\n        // buffer this fragment until we are sure we've received the\n        // complete payload\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function() {\n        var\n          event = {\n            type: 'metadata',\n            tracks: []\n          },\n          programMapTable = data.programMapTable;\n\n        // translate audio and video streams to tracks\n        if (programMapTable.video !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n  this.flush = function() {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\nElementaryStream.prototype = new Stream();\n\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: TransportPacketStream,\n  TransportParseStream: TransportParseStream,\n  ElementaryStream: ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;\n","'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar AdtsStream;\n\nvar\n  ADTS_SAMPLING_FREQUENCIES = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\nAdtsStream = function() {\n  var buffer;\n\n  AdtsStream.prototype.init.call(this);\n\n  this.push = function(packet) {\n    var\n      i = 0,\n      frameNum = 0,\n      frameLength,\n      protectionSkipBytes,\n      frameEnd,\n      oldBuffer,\n      sampleCount,\n      adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    }\n\n    // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    }\n\n    // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n    while (i + 5 < buffer.length) {\n\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n      // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n      frameLength = ((buffer[i + 3] & 0x03) << 11) |\n        (buffer[i + 4] << 3) |\n        ((buffer[i + 5] & 0xe0) >> 5);\n\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = (sampleCount * 90000) /\n        ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n      frameEnd = i + frameLength;\n\n      // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n      if (buffer.byteLength < frameEnd) {\n        return;\n      }\n\n      // Otherwise, deliver the complete AAC frame\n      this.trigger('data', {\n        pts: packet.pts + (frameNum * adtsFrameDuration),\n        dts: packet.dts + (frameNum * adtsFrameDuration),\n        sampleCount: sampleCount,\n        audioobjecttype: ((buffer[i + 2] >>> 6) & 0x03) + 1,\n        channelcount: ((buffer[i + 2] & 1) << 2) |\n          ((buffer[i + 3] & 0xc0) >>> 6),\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      });\n\n      // If the buffer is empty, clear it and return\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++;\n\n      // Remove the finished frame from the buffer and start the process again\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n  this.flush = function() {\n    this.trigger('done');\n  };\n};\n\nAdtsStream.prototype = new Stream();\n\nmodule.exports = AdtsStream;\n","'use strict';\n\nvar ExpGolomb;\n\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\nExpGolomb = function(workingData) {\n  var\n    // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n\n    // the current word being examined\n    workingWord = 0, // :uint\n\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n\n  // ():uint\n  this.length = function() {\n    return (8 * workingBytesAvailable);\n  };\n\n  // ():uint\n  this.bitsAvailable = function() {\n    return (8 * workingBytesAvailable) + workingBitsAvailable;\n  };\n\n  // ():void\n  this.loadWord = function() {\n    var\n      position = workingData.byteLength - workingBytesAvailable,\n      workingBytes = new Uint8Array(4),\n      availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position,\n                                          position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n    // track the amount of workingData that has been processed\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  };\n\n  // (count:int):void\n  this.skipBits = function(count) {\n    var skipBytes; // :int\n    if (workingBitsAvailable > count) {\n      workingWord          <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n\n      count -= (skipBytes * 8);\n      workingBytesAvailable -= skipBytes;\n\n      this.loadWord();\n\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  };\n\n  // (size:int):uint\n  this.readBits = function(size) {\n    var\n      bits = Math.min(workingBitsAvailable, size), // :uint\n      valu = workingWord >>> (32 - bits); // :uint\n    // if size > 31, handle error\n    workingBitsAvailable -= bits;\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n    return valu;\n  };\n\n  // ():uint\n  this.skipLeadingZeros = function() {\n    var leadingZeroCount; // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n\n    // we exhausted workingWord and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  };\n\n  // ():void\n  this.skipUnsignedExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():void\n  this.skipExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():uint\n  this.readUnsignedExpGolomb = function() {\n    var clz = this.skipLeadingZeros(); // :uint\n    return this.readBits(clz + 1) - 1;\n  };\n\n  // ():int\n  this.readExpGolomb = function() {\n    var valu = this.readUnsignedExpGolomb(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    }\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  };\n\n  // Some convenience functions\n  // :Boolean\n  this.readBoolean = function() {\n    return this.readBits(1) === 1;\n  };\n\n  // ():int\n  this.readUnsignedByte = function() {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;\n","'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar ExpGolomb = require('../utils/exp-golomb.js');\n\nvar H264Stream, NalByteStream;\nvar PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n/**\n * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n */\nNalByteStream = function() {\n  var\n    syncPoint = 0,\n    i,\n    buffer;\n  NalByteStream.prototype.init.call(this);\n\n  /*\n   * Scans a byte stream and triggers a data event with the NAL units found.\n   * @param {Object} data Event received from H264Stream\n   * @param {Uint8Array} data.data The h264 byte stream to be scanned\n   *\n   * @see H264Stream.push\n   */\n  this.push = function(data) {\n    var swapBuffer;\n\n    if (!buffer) {\n      buffer = data.data;\n    } else {\n      swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n      swapBuffer.set(buffer);\n      swapBuffer.set(data.data, buffer.byteLength);\n      buffer = swapBuffer;\n    }\n\n    // Rec. ITU-T H.264, Annex B\n    // scan for NAL unit boundaries\n\n    // a match looks like this:\n    // 0 0 1 .. NAL .. 0 0 1\n    // ^ sync point        ^ i\n    // or this:\n    // 0 0 1 .. NAL .. 0 0 0\n    // ^ sync point        ^ i\n\n    // advance the sync point to a NAL start, if necessary\n    for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n      if (buffer[syncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        i = syncPoint + 5;\n        break;\n      }\n    }\n\n    while (i < buffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (buffer[i]) {\n      case 0:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0) {\n          i += 2;\n          break;\n        } else if (buffer[i - 2] !== 0) {\n          i++;\n          break;\n        }\n\n        // deliver the NAL unit if it isn't empty\n        if (syncPoint + 3 !== i - 2) {\n          this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        }\n\n        // drop trailing zeroes\n        do {\n          i++;\n        } while (buffer[i] !== 1 && i < buffer.length);\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      case 1:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0 ||\n            buffer[i - 2] !== 0) {\n          i += 3;\n          break;\n        }\n\n        // deliver the NAL unit\n        this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      default:\n        // the current byte isn't a one or zero, so it cannot be part\n        // of a sync sequence\n        i += 3;\n        break;\n      }\n    }\n    // filter out the NAL units that were delivered\n    buffer = buffer.subarray(syncPoint);\n    i -= syncPoint;\n    syncPoint = 0;\n  };\n\n  this.flush = function() {\n    // deliver the last buffered NAL unit\n    if (buffer && buffer.byteLength > 3) {\n      this.trigger('data', buffer.subarray(syncPoint + 3));\n    }\n    // reset the stream state\n    buffer = null;\n    syncPoint = 0;\n    this.trigger('done');\n  };\n};\nNalByteStream.prototype = new Stream();\n\n// values of profile_idc that indicate additional fields are included in the SPS\n// see Recommendation ITU-T H.264 (4/2013),\n// 7.3.2.1.1 Sequence parameter set data syntax\nPROFILES_WITH_OPTIONAL_SPS_DATA = {\n  100: true,\n  110: true,\n  122: true,\n  244: true,\n  44: true,\n  83: true,\n  86: true,\n  118: true,\n  128: true,\n  138: true,\n  139: true,\n  134: true\n};\n\n/**\n * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n * events.\n */\nH264Stream = function() {\n  var\n    nalByteStream = new NalByteStream(),\n    self,\n    trackId,\n    currentPts,\n    currentDts,\n\n    discardEmulationPreventionBytes,\n    readSequenceParameterSet,\n    skipScalingList;\n\n  H264Stream.prototype.init.call(this);\n  self = this;\n\n  /*\n   * Pushes a packet from a stream onto the NalByteStream\n   *\n   * @param {Object} packet - A packet received from a stream\n   * @param {Uint8Array} packet.data - The raw bytes of the packet\n   * @param {Number} packet.dts - Decode timestamp of the packet\n   * @param {Number} packet.pts - Presentation timestamp of the packet\n   * @param {Number} packet.trackId - The id of the h264 track this packet came from\n   * @param {('video'|'audio')} packet.type - The type of packet\n   *\n   */\n  this.push = function(packet) {\n    if (packet.type !== 'video') {\n      return;\n    }\n    trackId = packet.trackId;\n    currentPts = packet.pts;\n    currentDts = packet.dts;\n\n    nalByteStream.push(packet);\n  };\n\n  /*\n   * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n   * for the NALUs to the next stream component.\n   * Also, preprocess caption and sequence parameter NALUs.\n   *\n   * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n   * @see NalByteStream.push\n   */\n  nalByteStream.on('data', function(data) {\n    var\n      event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data\n      };\n\n    switch (data[0] & 0x1f) {\n    case 0x05:\n      event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n      break;\n    case 0x06:\n      event.nalUnitType = 'sei_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      break;\n    case 0x07:\n      event.nalUnitType = 'seq_parameter_set_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      event.config = readSequenceParameterSet(event.escapedRBSP);\n      break;\n    case 0x08:\n      event.nalUnitType = 'pic_parameter_set_rbsp';\n      break;\n    case 0x09:\n      event.nalUnitType = 'access_unit_delimiter_rbsp';\n      break;\n\n    default:\n      break;\n    }\n    // This triggers data on the H264Stream\n    self.trigger('data', event);\n  });\n  nalByteStream.on('done', function() {\n    self.trigger('done');\n  });\n\n  this.flush = function() {\n    nalByteStream.flush();\n  };\n\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @param expGolombDecoder {object} an ExpGolomb pointed to the\n   * start of a scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n  skipScalingList = function(count, expGolombDecoder) {\n    var\n      lastScale = 8,\n      nextScale = 8,\n      j,\n      deltaScale;\n\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = expGolombDecoder.readExpGolomb();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n\n      lastScale = (nextScale === 0) ? lastScale : nextScale;\n    }\n  };\n\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n  discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  };\n\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n  readSequenceParameterSet = function(data) {\n    var\n      frameCropLeftOffset = 0,\n      frameCropRightOffset = 0,\n      frameCropTopOffset = 0,\n      frameCropBottomOffset = 0,\n      sarScale = 1,\n      expGolombDecoder, profileIdc, levelIdc, profileCompatibility,\n      chromaFormatIdc, picOrderCntType,\n      numRefFramesInPicOrderCntCycle, picWidthInMbsMinus1,\n      picHeightInMapUnitsMinus1,\n      frameMbsOnlyFlag,\n      scalingListCount,\n      sarRatio,\n      aspectRatioIdc,\n      i;\n\n    expGolombDecoder = new ExpGolomb(data);\n    profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n    profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n    levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n    expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n    // some profiles have more optional data we don't need\n    if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n      chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n      if (chromaFormatIdc === 3) {\n        expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n      expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n      if (expGolombDecoder.readBoolean()) { // seq_scaling_matrix_present_flag\n        scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\n        for (i = 0; i < scalingListCount; i++) {\n          if (expGolombDecoder.readBoolean()) { // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16, expGolombDecoder);\n            } else {\n              skipScalingList(64, expGolombDecoder);\n            }\n          }\n        }\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n    picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n    if (picOrderCntType === 0) {\n      expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n      expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n      expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n      numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n    expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n    picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n    frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n    if (frameMbsOnlyFlag === 0) {\n      expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n\n    expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n    if (expGolombDecoder.readBoolean()) { // frame_cropping_flag\n      frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n    }\n    if (expGolombDecoder.readBoolean()) {\n      // vui_parameters_present_flag\n      if (expGolombDecoder.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break;\n          case 2: sarRatio = [12, 11]; break;\n          case 3: sarRatio = [10, 11]; break;\n          case 4: sarRatio = [16, 11]; break;\n          case 5: sarRatio = [40, 33]; break;\n          case 6: sarRatio = [24, 11]; break;\n          case 7: sarRatio = [20, 11]; break;\n          case 8: sarRatio = [32, 11]; break;\n          case 9: sarRatio = [80, 33]; break;\n          case 10: sarRatio = [18, 11]; break;\n          case 11: sarRatio = [15, 11]; break;\n          case 12: sarRatio = [64, 33]; break;\n          case 13: sarRatio = [160, 99]; break;\n          case 14: sarRatio = [4, 3]; break;\n          case 15: sarRatio = [3, 2]; break;\n          case 16: sarRatio = [2, 1]; break;\n          case 255: {\n            sarRatio = [expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte(),\n                        expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte() ];\n            break;\n          }\n        }\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n    return {\n      profileIdc: profileIdc,\n      levelIdc: levelIdc,\n      profileCompatibility: profileCompatibility,\n      width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - (frameCropTopOffset * 2) - (frameCropBottomOffset * 2)\n    };\n  };\n\n};\nH264Stream.prototype = new Stream();\n\nmodule.exports = {\n  H264Stream: H264Stream,\n  NalByteStream: NalByteStream\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  isLikelyAacData: isLikelyAacData,\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * A stream-based aac to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js');\nvar aacUtils = require('./utils');\n\n// Constants\nvar AacStream;\n\n/**\n * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n */\n\nAacStream = function() {\n  var\n    everything = new Uint8Array(),\n    timeStamp = 0;\n\n  AacStream.prototype.init.call(this);\n\n  this.setTimestamp = function(timestamp) {\n    timeStamp = timestamp;\n  };\n\n  this.push = function(bytes) {\n    var\n      frameSize = 0,\n      byteIndex = 0,\n      bytesLeft,\n      chunk,\n      packet,\n      tempLength;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (everything.length) {\n      tempLength = everything.length;\n      everything = new Uint8Array(bytes.byteLength + tempLength);\n      everything.set(everything.subarray(0, tempLength));\n      everything.set(bytes, tempLength);\n    } else {\n      everything = bytes;\n    }\n\n    while (everything.length - byteIndex >= 3) {\n      if ((everything[byteIndex] === 'I'.charCodeAt(0)) &&\n          (everything[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n          (everything[byteIndex + 2] === '3'.charCodeAt(0))) {\n\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (everything.length - byteIndex < 10) {\n          break;\n        }\n\n        // check framesize\n        frameSize = aacUtils.parseId3TagSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        // Add to byteIndex to support multiple ID3 tags in sequence\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n        chunk = {\n          type: 'timed-metadata',\n          data: everything.subarray(byteIndex, byteIndex + frameSize)\n        };\n        this.trigger('data', chunk);\n        byteIndex += frameSize;\n        continue;\n      } else if (((everything[byteIndex] & 0xff) === 0xff) &&\n                 ((everything[byteIndex + 1] & 0xf0) === 0xf0)) {\n\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (everything.length - byteIndex < 7) {\n          break;\n        }\n\n        frameSize = aacUtils.parseAdtsSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n\n        packet = {\n          type: 'audio',\n          data: everything.subarray(byteIndex, byteIndex + frameSize),\n          pts: timeStamp,\n          dts: timeStamp\n        };\n        this.trigger('data', packet);\n        byteIndex += frameSize;\n        continue;\n      }\n      byteIndex++;\n    }\n    bytesLeft = everything.length - byteIndex;\n\n    if (bytesLeft > 0) {\n      everything = everything.subarray(byteIndex);\n    } else {\n      everything = new Uint8Array();\n    }\n  };\n};\n\nAacStream.prototype = new Stream();\n\nmodule.exports = AacStream;\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar mp4 = require('./mp4-generator.js');\nvar frameUtils = require('./frame-utils');\nvar audioFrameUtils = require('./audio-frame-utils');\nvar trackDecodeInfo = require('./track-decode-info');\nvar m2ts = require('../m2ts/m2ts.js');\nvar AdtsStream = require('../codecs/adts.js');\nvar H264Stream = require('../codecs/h264').H264Stream;\nvar AacStream = require('../aac');\nvar isLikelyAacData = require('../aac/utils').isLikelyAacData;\n\n// constants\nvar AUDIO_PROPERTIES = [\n  'audioobjecttype',\n  'channelcount',\n  'samplerate',\n  'samplingfrequencyindex',\n  'samplesize'\n];\n\nvar VIDEO_PROPERTIES = [\n  'width',\n  'height',\n  'profileIdc',\n  'levelIdc',\n  'profileCompatibility'\n];\n\n// object types\nvar VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n\n/**\n * Compare two arrays (even typed) for same-ness\n */\nvar arrayEquals = function(a, b) {\n  var\n    i;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  // compare the value of each element in the array\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nAudioSegmentStream = function(track, options) {\n  var\n    adtsFrames = [],\n    sequenceNumber = 0,\n    earliestAllowedDts = 0,\n    audioAppendStartTs = 0,\n    videoBaseMediaDecodeTime = Infinity;\n\n  options = options || {};\n\n  AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    trackDecodeInfo.collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function(prop) {\n        track[prop] = data[prop];\n      });\n    }\n\n    // buffer audio data until end() is called\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function(earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.setVideoBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    videoBaseMediaDecodeTime = baseMediaDecodeTime;\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    audioAppendStartTs = timestamp;\n  };\n\n  this.flush = function() {\n    var\n      frames,\n      moof,\n      mdat,\n      boxes;\n\n    // return early if no audio data has been observed\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = audioFrameUtils.trimAdtsFramesByEarliestDts(\n      adtsFrames, track, earliestAllowedDts);\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    audioFrameUtils.prefixWithSilence(\n      track, frames, audioAppendStartTs, videoBaseMediaDecodeTime);\n\n    // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n    track.samples = audioFrameUtils.generateSampleTable(frames);\n\n    // concatenate the audio data to constuct the mdat\n    mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n\n    adtsFrames = [];\n\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    trackDecodeInfo.clearDtsInfo(track);\n\n    this.trigger('data', {track: track, boxes: boxes});\n    this.trigger('done', 'AudioSegmentStream');\n  };\n};\n\nAudioSegmentStream.prototype = new Stream();\n\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n *        gopsToAlignWith list when attempting to align gop pts\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nVideoSegmentStream = function(track, options) {\n  var\n    sequenceNumber = 0,\n    nalUnits = [],\n    gopsToAlignWith = [],\n    config,\n    pps;\n\n  options = options || {};\n\n  VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n\n  this.gopCache_ = [];\n\n  /**\n    * Constructs a ISO BMFF segment given H264 nalUnits\n    * @param {Object} nalUnit A data event representing a nalUnit\n    * @param {String} nalUnit.nalUnitType\n    * @param {Object} nalUnit.config Properties for a mp4 track\n    * @param {Uint8Array} nalUnit.data The nalUnit bytes\n    * @see lib/codecs/h264.js\n   **/\n  this.push = function(nalUnit) {\n    trackDecodeInfo.collectDtsInfo(track, nalUnit);\n\n    // record the track config\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n\n      VIDEO_PROPERTIES.forEach(function(prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' &&\n        !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    }\n\n    // buffer video until flush() is called\n    nalUnits.push(nalUnit);\n  };\n\n  /**\n    * Pass constructed ISO BMFF track and boxes on to the\n    * next stream in the pipeline\n   **/\n  this.flush = function() {\n    var\n      frames,\n      gopForFusion,\n      gops,\n      moof,\n      mdat,\n      boxes;\n\n    // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n      nalUnits.shift();\n    }\n\n    // Return early if no video data has been observed\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    }\n\n    // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n    frames = frameUtils.groupNalsIntoFrames(nalUnits);\n    gops = frameUtils.groupFramesIntoGops(frames);\n\n    // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        gops.unshift(gopForFusion);\n        // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyframe-pulling\n        gops = frameUtils.extendFirstKeyFrame(gops);\n      }\n    }\n\n    // Trim gops to align with gopsToAlignWith\n    if (gopsToAlignWith.length) {\n      var alignedGops;\n\n      if (options.alignGopsAtEnd) {\n        alignedGops = this.alignGopsAtEnd_(gops);\n      } else {\n        alignedGops = this.alignGopsAtStart_(gops);\n      }\n\n      if (!alignedGops) {\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        // return early no gops can be aligned with desired gopsToAlignWith\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      }\n\n      // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n      // when recalculated before sending off to CoalesceStream\n      trackDecodeInfo.clearDtsInfo(track);\n\n      gops = alignedGops;\n    }\n\n    trackDecodeInfo.collectDtsInfo(track, gops);\n\n    // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n    track.samples = frameUtils.generateSampleTable(gops);\n\n    // Concatenate the video data and construct the mdat\n    mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    this.trigger('processedGopsInfo', gops.map(function(gop) {\n      return {\n        pts: gop.pts,\n        dts: gop.dts,\n        byteLength: gop.byteLength\n      };\n    }));\n\n    // save all the nals in the last GOP into the gop cache\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    });\n\n    // Keep a maximum of 6 GOPs in the cache\n    this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n    // Clear nalUnits\n    nalUnits = [];\n\n    this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n    moof = mp4.moof(sequenceNumber, [track]);\n\n    // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // Bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    this.trigger('data', {track: track, boxes: boxes});\n\n    this.resetStream_();\n\n    // Continue with the flush process now\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function() {\n    trackDecodeInfo.clearDtsInfo(track);\n\n    // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n    config = undefined;\n    pps = undefined;\n  };\n\n  // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n  this.getGopForFusion_ = function(nalUnit) {\n    var\n      halfSecond = 45000, // Half-a-second in a 90khz clock\n      allowableOverlap = 10000, // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n      dtsDistance,\n      nearestGopObj,\n      currentGop,\n      currentGopObj,\n      i;\n\n    // Search for the GOP nearest to the beginning of this nal unit\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop;\n\n      // Reject Gops with different SPS or PPS\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) ||\n          !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      }\n\n      // Reject Gops that would require a negative baseMediaDecodeTime\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      }\n\n      // The distance between the end of the gop and the start of the nalUnit\n      dtsDistance = (nalUnit.dts - currentGop.dts) - currentGop.duration;\n\n      // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n      if (dtsDistance >= -allowableOverlap &&\n          dtsDistance <= halfSecond) {\n\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj ||\n            nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n    return null;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the START of the list\n  this.alignGopsAtStart_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n    byteLength = gops.byteLength;\n    nalCount = gops.nalCount;\n    duration = gops.duration;\n    alignIndex = gopIndex = 0;\n\n    while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        break;\n      }\n\n      if (gop.pts > align.pts) {\n        // this current gop starts after the current gop we want to align on, so increment\n        // align index\n        alignIndex++;\n        continue;\n      }\n\n      // current gop starts before the current gop we want to align on. so increment gop\n      // index\n      gopIndex++;\n      byteLength -= gop.byteLength;\n      nalCount -= gop.nalCount;\n      duration -= gop.duration;\n    }\n\n    if (gopIndex === 0) {\n      // no gops to trim\n      return gops;\n    }\n\n    if (gopIndex === gops.length) {\n      // all gops trimmed, skip appending all gops\n      return null;\n    }\n\n    alignedGops = gops.slice(gopIndex);\n    alignedGops.byteLength = byteLength;\n    alignedGops.duration = duration;\n    alignedGops.nalCount = nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the END of the list\n  this.alignGopsAtEnd_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n    alignIndex = gopsToAlignWith.length - 1;\n    gopIndex = gops.length - 1;\n    alignEndIndex = null;\n    matchFound = false;\n\n    while (alignIndex >= 0 && gopIndex >= 0) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        matchFound = true;\n        break;\n      }\n\n      if (align.pts > gop.pts) {\n        alignIndex--;\n        continue;\n      }\n\n      if (alignIndex === gopsToAlignWith.length - 1) {\n        // gop.pts is greater than the last alignment candidate. If no match is found\n        // by the end of this loop, we still want to append gops that come after this\n        // point\n        alignEndIndex = gopIndex;\n      }\n\n      gopIndex--;\n    }\n\n    if (!matchFound && alignEndIndex === null) {\n      return null;\n    }\n\n    var trimIndex;\n\n    if (matchFound) {\n      trimIndex = gopIndex;\n    } else {\n      trimIndex = alignEndIndex;\n    }\n\n    if (trimIndex === 0) {\n      return gops;\n    }\n\n    var alignedGops = gops.slice(trimIndex);\n    var metadata = alignedGops.reduce(function(total, gop) {\n      total.byteLength += gop.byteLength;\n      total.duration += gop.duration;\n      total.nalCount += gop.nalCount;\n      return total;\n    }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n    alignedGops.byteLength = metadata.byteLength;\n    alignedGops.duration = metadata.duration;\n    alignedGops.nalCount = metadata.nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  this.alignGopsWith = function(newGopsToAlignWith) {\n    gopsToAlignWith = newGopsToAlignWith;\n  };\n};\n\nVideoSegmentStream.prototype = new Stream();\n\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at media timeline start.\n */\nCoalesceStream = function(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n\n  options = options || {};\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  if (typeof options.keepOriginalTimestamps === 'boolean') {\n    this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  CoalesceStream.prototype.init.call(this);\n\n  // Take output from multiple\n  this.push = function(output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    }\n    // buffer incoming id3 tags until the final flush\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    }\n\n    // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\nCoalesceStream.prototype = new Stream();\nCoalesceStream.prototype.flush = function(flushSource) {\n  var\n    offset = 0,\n    event = {\n      captions: [],\n      captionStreams: {},\n      metadata: [],\n      info: {}\n    },\n    caption,\n    id3,\n    initSegment,\n    timelineStartPts = 0,\n    i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' &&\n        flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n\n  initSegment = mp4.initSegment(this.pendingTracks);\n\n  // Create a new typed array to hold the init segment\n  event.initSegment = new Uint8Array(initSegment.byteLength);\n\n  // Create an init segment containing a moov\n  // and track definitions\n  event.initSegment.set(initSegment);\n\n  // Create a new typed array to hold the moof+mdats\n  event.data = new Uint8Array(this.pendingBytes);\n\n  // Append each moof+mdat (one per track) together\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  }\n\n  // Translate caption PTS times into second offsets to match the\n  // video timeline for the segment, and add track info\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n\n    caption.startTime = caption.startPts;\n    if (!this.keepOriginalTimestamps) {\n      caption.startTime -= timelineStartPts;\n    }\n    caption.startTime /= 90e3;\n\n    caption.endTime = caption.endPts;\n    if (!this.keepOriginalTimestamps) {\n      caption.endTime -= timelineStartPts;\n    }\n    caption.endTime /= 90e3;\n\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  }\n\n  // Translate ID3 frame PTS times into second offsets to match the\n  // video timeline for the segment\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n\n    id3.cueTime = id3.pts;\n    if (!this.keepOriginalTimestamps) {\n      id3.cueTime -= timelineStartPts;\n    }\n    id3.cueTime /= 90e3;\n\n    event.metadata.push(id3);\n  }\n\n  // We add this to every single emitted segment even though we only need\n  // it for the first\n  event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n  // Reset stream state\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0;\n\n  // Emit the built segment\n  this.trigger('data', event);\n\n  // Only emit `done` if all tracks have been flushed and emitted\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\nTransmuxer = function(options) {\n  var\n    self = this,\n    hasFlushed = true,\n    videoTrack,\n    audioTrack;\n\n  Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n\n    pipeline.aacStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n    pipeline.aacStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.metadataStream.on('timestamp', function(frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n\n    pipeline.aacStream.on('data', function(data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        };\n        // hook up the audio segment stream to the first track with aac data\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        // Set up the final part of the audio pipeline\n        pipeline.adtsStream\n          .pipe(pipeline.audioSegmentStream)\n          .pipe(pipeline.coalesceStream);\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream;\n\n    // disassemble MPEG2-TS packets into elementary streams\n    pipeline.packetStream\n      .pipe(pipeline.parseStream)\n      .pipe(pipeline.elementaryStream);\n\n    // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n    pipeline.elementaryStream\n      .pipe(pipeline.videoTimestampRolloverStream)\n      .pipe(pipeline.h264Stream);\n    pipeline.elementaryStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n\n    pipeline.elementaryStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    // Hook up CEA-608/708 caption stream\n    pipeline.h264Stream.pipe(pipeline.captionStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.elementaryStream.on('data', function(data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length;\n\n        // scan the tracks listed in the metadata\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        }\n\n        // hook up the video segment stream to the first track with h264 data\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n\n          pipeline.videoSegmentStream.on('timelineStartInfo', function(timelineStartInfo) {\n          // When video emits timelineStartInfo data after a flush, we forward that\n          // info to the AudioSegmentStream, if it exists, because video timeline\n          // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo;\n              // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n\n          pipeline.videoSegmentStream.on('processedGopsInfo',\n            self.trigger.bind(self, 'gopInfo'));\n\n          pipeline.videoSegmentStream.on('baseMediaDecodeTime', function(baseMediaDecodeTime) {\n            if (audioTrack) {\n              pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n            }\n          });\n\n          // Set up the final part of the video pipeline\n          pipeline.h264Stream\n            .pipe(pipeline.videoSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n\n          // Set up the final part of the audio pipeline\n          pipeline.adtsStream\n            .pipe(pipeline.audioSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  // hook up the segment streams once track metadata is delivered\n  this.setBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    if (!options.keepOriginalTimestamps) {\n      this.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(audioTrack);\n      if (!options.keepOriginalTimestamps) {\n        audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (pipeline.audioTimestampRolloverStream) {\n        pipeline.audioTimestampRolloverStream.discontinuity();\n      }\n    }\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n        pipeline.videoTimestampRolloverStream.discontinuity();\n      }\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(videoTrack);\n      pipeline.captionStream.reset();\n      if (!options.keepOriginalTimestamps) {\n        videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n    }\n\n    if (pipeline.timedMetadataTimestampRolloverStream) {\n      pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n    }\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    if (audioTrack) {\n      this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n    }\n  };\n\n  this.alignGopsWith = function(gopsToAlignWith) {\n    if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n    }\n  };\n\n  // feed incoming data to the front of the parsing pipeline\n  this.push = function(data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n      hasFlushed = false;\n    }\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  };\n\n  // flush any buffered data\n  this.flush = function() {\n      hasFlushed = true;\n    // Start at the top of the pipeline and flush all pending work\n    this.transmuxPipeline_.headOfPipeline.flush();\n  };\n\n  // Caption data has to be reset when seeking outside buffered range\n  this.resetCaptions = function() {\n    if (this.transmuxPipeline_.captionStream) {\n      this.transmuxPipeline_.captionStream.reset();\n    }\n  };\n\n};\nTransmuxer.prototype = new Stream();\n\nmodule.exports = {\n  Transmuxer: Transmuxer,\n  VideoSegmentStream: VideoSegmentStream,\n  AudioSegmentStream: AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar\n  inspectMp4,\n  textifyMp4,\n\n  parseType = require('../mp4/probe').parseType,\n  parseMp4Date = function(seconds) {\n    return new Date(seconds * 1000 - 2082844800000);\n  },\n  parseSampleFlags = function(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    };\n  },\n  nalParse = function(avcStream) {\n    var\n      avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4;\n\n      // bail if this doesn't appear to be an H264 stream\n      if (length <= 0) {\n        result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n      }\n    }\n    return result;\n  },\n\n  // registry of handlers for individual mp4 box types\n  parse = {\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    avc1: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        dataReferenceIndex: view.getUint16(6),\n        width: view.getUint16(24),\n        height: view.getUint16(26),\n        horizresolution: view.getUint16(28) + (view.getUint16(30) / 16),\n        vertresolution: view.getUint16(32) + (view.getUint16(34) / 16),\n        frameCount: view.getUint16(40),\n        depth: view.getUint16(74),\n        config: inspectMp4(data.subarray(78, data.byteLength))\n      };\n    },\n    avcC: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i;\n\n      // iterate past any SPSs\n      offset = 6;\n      for (i = 0; i < numOfSequenceParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      // iterate past any PPSs\n      numOfPictureParameterSets = data[offset];\n      offset++;\n      for (i = 0; i < numOfPictureParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      return result;\n    },\n    btrt: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        bufferSizeDB: view.getUint32(0),\n        maxBitrate: view.getUint32(4),\n        avgBitrate: view.getUint32(8)\n      };\n    },\n    esds: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        esId: (data[6] << 8) | data[7],\n        streamPriority: data[8] & 0x1f,\n        decoderConfig: {\n          objectProfileIndication: data[11],\n          streamType: (data[12] >>> 2) & 0x3f,\n          bufferSize: (data[13] << 16) | (data[14] << 8) | data[15],\n          maxBitrate: (data[16] << 24) |\n            (data[17] << 16) |\n            (data[18] <<  8) |\n            data[19],\n          avgBitrate: (data[20] << 24) |\n            (data[21] << 16) |\n            (data[22] <<  8) |\n            data[23],\n          decoderConfigDescriptor: {\n            tag: data[24],\n            length: data[25],\n            audioObjectType: (data[26] >>> 3) & 0x1f,\n            samplingFrequencyIndex: ((data[26] & 0x07) << 1) |\n              ((data[27] >>> 7) & 0x01),\n            channelConfiguration: (data[27] >>> 3) & 0x0f\n          }\n        }\n      };\n    },\n    ftyp: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          majorBrand: parseType(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n        i = 8;\n      while (i < data.byteLength) {\n        result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n        i += 4;\n      }\n      return result;\n    },\n    dinf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    dref: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        dataReferences: inspectMp4(data.subarray(8))\n      };\n    },\n    hdlr: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType(data.subarray(8, 12)),\n          name: ''\n        },\n        i = 8;\n\n      // parse out the name field\n      for (i = 24; i < data.byteLength; i++) {\n        if (data[i] === 0x00) {\n          // the name field is null-terminated\n          i++;\n          break;\n        }\n        result.name += String.fromCharCode(data[i]);\n      }\n      // decode UTF-8 to javascript's internal representation\n      // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n      result.name = decodeURIComponent(escape(result.name));\n\n      return result;\n    },\n    mdat: function(data) {\n      return {\n        byteLength: data.byteLength,\n        nals: nalParse(data)\n      };\n    },\n    mdhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n      // each field is the packed difference between its ASCII value and 0x60\n      language = view.getUint16(i);\n      result.language += String.fromCharCode((language >> 10) + 0x60);\n      result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n      result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n      return result;\n    },\n    mdia: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mfhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sequenceNumber: (data[4] << 24) |\n          (data[5] << 16) |\n          (data[6] << 8) |\n          (data[7])\n      };\n    },\n    minf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    mp4a: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + (view.getUint16(26) / 65536)\n        };\n\n      // if there are more bytes to process, assume this is an ISO/IEC\n      // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n      if (data.byteLength > 28) {\n        result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n      }\n      return result;\n    },\n    moof: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    moov: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvex: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n\n      // convert fixed-point, base 16 back to a number\n      result.rate = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      i += 2 * 4;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      i += 6 * 4;\n      result.nextTrackId = view.getUint32(i);\n      return result;\n    },\n    pdin: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4)),\n        rate: view.getUint32(4),\n        initialDelay: view.getUint32(8)\n      };\n    },\n    sdtp: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        }, i;\n\n      for (i = 4; i < data.byteLength; i++) {\n        result.samples.push({\n          dependsOn: (data[i] & 0x30) >> 4,\n          isDependedOn: (data[i] & 0x0c) >> 2,\n          hasRedundancy: data[i] & 0x03\n        });\n      }\n      return result;\n    },\n    sidx: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            references: [],\n            referenceId: view.getUint32(4),\n            timescale: view.getUint32(8),\n            earliestPresentationTime: view.getUint32(12),\n            firstOffset: view.getUint32(16)\n          },\n          referenceCount = view.getUint16(22),\n          i;\n\n      for (i = 24; referenceCount; i += 12, referenceCount--) {\n        result.references.push({\n          referenceType: (data[i] & 0x80) >>> 7,\n          referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n          subsegmentDuration: view.getUint32(i + 4),\n          startsWithSap: !!(data[i + 8] & 0x80),\n          sapType: (data[i + 8] & 0x70) >>> 4,\n          sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n        });\n      }\n\n      return result;\n    },\n    smhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        balance: data[4] + (data[5] / 256)\n      };\n    },\n    stbl: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    stco: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n      for (i = 8; entryCount; i += 4, entryCount--) {\n        result.chunkOffsets.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stsc: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n        i;\n      for (i = 8; entryCount; i += 12, entryCount--) {\n        result.sampleToChunks.push({\n          firstChunk: view.getUint32(i),\n          samplesPerChunk: view.getUint32(i + 4),\n          sampleDescriptionIndex: view.getUint32(i + 8)\n        });\n      }\n      return result;\n    },\n    stsd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sampleDescriptions: inspectMp4(data.subarray(8))\n      };\n    },\n    stsz: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n        i;\n      for (i = 12; i < data.byteLength; i += 4) {\n        result.entries.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stts: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n\n      for (i = 8; entryCount; i += 8, entryCount--) {\n        result.timeToSamples.push({\n          sampleCount: view.getUint32(i),\n          sampleDelta: view.getUint32(i + 4)\n        });\n      }\n      return result;\n    },\n    styp: function(data) {\n      return parse.ftyp(data);\n    },\n    tfdt: function(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n      };\n      if (result.version === 1) {\n        result.baseMediaDecodeTime *= Math.pow(2, 32);\n        result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n      }\n      return result;\n    },\n    tfhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof =  result.flags[0] & 0x020000,\n        i;\n\n      i = 8;\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n      return result;\n    },\n    tkhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      i += 2 * 4;\n      result.layer = view.getUint16(i);\n      i += 2;\n      result.alternateGroup = view.getUint16(i);\n      i += 2;\n      // convert fixed-point, base 16 back to a number\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      result.width = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.height = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      return result;\n    },\n    traf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trak: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trex: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4),\n        defaultSampleDescriptionIndex: view.getUint32(8),\n        defaultSampleDuration: view.getUint32(12),\n        defaultSampleSize: view.getUint32(16),\n        sampleDependsOn: data[20] & 0x03,\n        sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n        sampleHasRedundancy: (data[21] & 0x30) >> 4,\n        samplePaddingValue: (data[21] & 0x0e) >> 1,\n        sampleIsDifferenceSample: !!(data[21] & 0x01),\n        sampleDegradationPriority: view.getUint16(22)\n      };\n    },\n    trun: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01, // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04, // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01, // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02, // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04, // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08, // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      }\n\n      // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n      }\n      return result;\n    },\n    'url ': function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n    },\n    vmhd: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        graphicsmode: view.getUint16(4),\n        opcolor: new Uint16Array([view.getUint16(6),\n                                  view.getUint16(8),\n                                  view.getUint16(10)])\n      };\n    }\n  };\n\n\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\ninspectMp4 = function(data) {\n  var\n    i = 0,\n    result = [],\n    view,\n    size,\n    type,\n    end,\n    box;\n\n  // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n  for (var z = 0; z < data.length; ++z) {\n      v[z] = data[z];\n  }\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type =  parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    // parse type-specific data\n    box = (parse[type] || function(data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n    box.size = size;\n    box.type = type;\n\n    // store this box and move to the next\n    result.push(box);\n    i = end;\n  }\n  return result;\n};\n\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\ntextifyMp4 = function(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' ');\n\n  // iterate over all the boxes\n  return inspectedMp4.map(function(box, index) {\n\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' +\n\n      // the type is already included and handle child boxes separately\n      Object.keys(box).filter(function(key) {\n        return key !== 'type' && key !== 'boxes';\n\n      // output all the box properties\n      }).map(function(key) {\n        var prefix = indent + '  ' + key + ': ',\n            value = box[key];\n\n        // print out raw bytes as hexademical\n        if (value instanceof Uint8Array || value instanceof Uint32Array) {\n          var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength))\n              .map(function(byte) {\n                return ' ' + ('00' + byte.toString(16)).slice(-2);\n              }).join('').match(/.{1,24}/g);\n          if (!bytes) {\n            return prefix + '<>';\n          }\n          if (bytes.length === 1) {\n            return prefix + '<' + bytes.join('').slice(1) + '>';\n          }\n          return prefix + '<\\n' + bytes.map(function(line) {\n            return indent + '  ' + line;\n          }).join('\\n') + '\\n' + indent + '  >';\n        }\n\n        // stringify generic objects\n        return prefix +\n            JSON.stringify(value, null, 2)\n              .split('\\n').map(function(line, index) {\n                if (index === 0) {\n                  return line;\n                }\n                return indent + '  ' + line;\n              }).join('\\n');\n      }).join('\\n') +\n\n    // recursively textify the child boxes\n    (box.boxes ? '\\n' + textifyMp4(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: textifyMp4,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\nvar probe = require('./probe');\nvar inspect = require('../tools/mp4-inspector');\n\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar mapToSample = function(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\nvar findSeiNals = function(avcStream, samples, trackId) {\n  var\n    avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n    result = [],\n    seiNal,\n    i,\n    length,\n    lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4;\n\n    // Bail if this doesn't appear to be an H264 stream\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n    case 0x06:\n      var data = avcStream.subarray(i + 1, i + 1 + length);\n      var matchingSample = mapToSample(i, samples);\n\n      seiNal = {\n        nalUnitType: 'sei_rbsp',\n        size: length,\n        data: data,\n        escapedRBSP: discardEmulationPreventionBytes(data),\n        trackId: trackId\n      };\n\n      if (matchingSample) {\n        seiNal.pts = matchingSample.pts;\n        seiNal.dts = matchingSample.dts;\n        lastMatchedSample = matchingSample;\n      } else {\n        // If a matching sample cannot be found, use the last\n        // sample's values as they should be as close as possible\n        seiNal.pts = lastMatchedSample.pts;\n        seiNal.dts = lastMatchedSample.dts;\n      }\n\n      result.push(seiNal);\n      break;\n    default:\n      break;\n    }\n  }\n\n  return result;\n};\n\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar parseSamples = function(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n\n  truns.forEach(function(trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n\n    samples.forEach(function(sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n      sample.pts = currentDts + sample.compositionTimeOffset;\n\n      currentDts += sample.duration;\n    });\n\n    allSamples = allSamples.concat(samples);\n  });\n\n  return allSamples;\n};\n\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\nvar parseCaptionNals = function(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']);\n  // To get SEI NAL units\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = [];\n\n  // Pair up each traf with a mdat as moofs and mdats are in pairs\n  mdats.forEach(function(mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n\n  mdatTrafPairs.forEach(function(pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']);\n    // Exactly 1 tfhd per traf\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']);\n    // Either 0 or 1 tfdt per traf\n    var baseMediaDecodeTime = (tfdt.length > 0) ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals;\n\n    // Only parse video data for the chosen video track\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n\n  return captionNals;\n};\n\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\nvar parseEmbeddedCaptions = function(segment, trackId, timescale) {\n  var seiNals;\n\n  if (!trackId) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\nvar CaptionParser = function() {\n  var isInitialized = false;\n  var captionStream;\n\n  // Stores segments seen before trackId and timescale are set\n  var segmentCache;\n  // Stores video track ID of the track being parsed\n  var trackId;\n  // Stores the timescale of the track being parsed\n  var timescale;\n  // Stores captions parsed so far\n  var parsedCaptions;\n\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n  this.isInitialized = function() {\n    return isInitialized;\n  };\n\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n  this.init = function() {\n    captionStream = new CaptionStream();\n    isInitialized = true;\n\n    // Collect dispatched captions\n    captionStream.on('data', function(event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n  this.isNewInit = function(videoTrackIds, timescales) {\n    if ((videoTrackIds && videoTrackIds.length === 0) ||\n        (timescales && typeof timescales === 'object' &&\n          Object.keys(timescales).length === 0)) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] ||\n      timescale !== timescales[trackId];\n  };\n\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n  this.parse = function(segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null;\n\n    // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId];\n\n    // If an init segment has not been seen yet, hold onto segment\n    // data until we have one\n    } else if (!trackId || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    }\n\n    // Now that a timescale and trackId is set, parse cached segments\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals);\n    // Force the parsed captions to be dispatched\n    this.flushStream();\n\n    return parsedCaptions;\n  };\n\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n  this.pushNals = function(nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function(nal) {\n      captionStream.push(nal);\n    });\n  };\n\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n  this.flushStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.flush();\n  };\n\n  /**\n    * Reset caption buckets for new data\n   **/\n  this.clearParsedCaptions = function() {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n  this.resetCaptionStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n  this.clearAllCaptions = function() {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n\n  /**\n    * Reset caption parser\n   **/\n  this.reset = function() {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;\n","module.exports = {\n  generator: require('./mp4-generator'),\n  probe: require('./probe'),\n  Transmuxer: require('./transmuxer').Transmuxer,\n  AudioSegmentStream: require('./transmuxer').AudioSegmentStream,\n  VideoSegmentStream: require('./transmuxer').VideoSegmentStream,\n  CaptionParser: require('./caption-parser')\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/utils.js');\n\n\nvar\n  PES_TIMESCALE = 90000,\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex <= bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    result.firstKeyFrame = probe.ts.parsePesTime(frame);\n                    result.firstKeyFrame.type = 'video';\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = probe.aac.isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect,\n  parseAudioPes_: parseAudioPes_\n};\n","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\nvar PADDING = void 0;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n\n  return result;\n}\n\n// pre-define the padding values\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\n\nexport { pad, unpad, version as VERSION };\n","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1];\n    // state variables a,b,c,d are loaded with pre-whitened data\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0;\n\n    // key.length === 2 ?\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1];\n\n    // load up the tables\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4];\n\n    // Inner rounds. Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;b = b2;c = c2;\n    }\n\n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;a = b;b = c;c = d;d = a2;\n    }\n  };\n\n  return AES;\n}();\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    }\n\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file async-stream.js\n */\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new AES(Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0;\n\n  // iteration variable\n  var wordIx = void 0;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new AsyncStream();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n\n  /**\n   * @private\n   */\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\nexport { decrypt, Decrypter, AsyncStream };\n","/**\n * @license\n * Video.js 7.4.1 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport vtt from 'videojs-vtt.js';\nimport tsml from 'tsml';\nimport xhr from 'xhr';\nimport URLToolkit from 'url-toolkit';\nimport window$1 from 'global/window';\nimport { Parser } from 'm3u8-parser';\nimport document from 'global/document';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport { CaptionParser } from 'mux.js/lib/mp4';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.4.1\";\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args));\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log = createLogger('VIDEOJS');\nvar createLogger$1 = log.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set \", \" to \", \".\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn(tsml(_templateObject(), propName, val));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\nfunction findPosition(el) {\n  var box;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\nvar elData = {};\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\n\nvar elIdAttr = 'vdata' + new Date().getTime();\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\n\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\n\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\n\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  } // Remove all stored data\n\n\n  delete elData[id]; // Remove the elIdAttr property from the DOM node\n\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  } // Returns fixed-up instance\n\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {// disregard\n  }\n})();\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  }; // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {Number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this;\n\n  // only set up EVENT_MAP if it'll be used\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map.delete(type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP.delete(_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    } // Make a copy of prototype.options_ to protect against overriding defaults\n\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {}; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    }); // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  };\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  _proto.player = function player() {\n    return this.player_;\n  };\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  _proto.options = function options(obj) {\n    log.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  _proto.el = function el() {\n    return this.el_;\n  };\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  _proto.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  _proto.id = function id() {\n    return this.id_;\n  };\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  _proto.name = function name() {\n    return this.name_;\n  };\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  _proto.children = function children() {\n    return this.children_;\n  };\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n    return this.childNameIndex_[name];\n  };\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  };\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  };\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  _proto.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  _proto.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  _proto.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  _proto.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  _proto.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  _proto.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  _proto.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  _proto.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  _proto.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    } // remove 'px' from variable and parse as integer\n\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0) {\n      var rule = \"offset\" + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n  /**\n   * Set the focus to this component\n   */\n\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  };\n  /**\n   * Remove the focus from this component\n   */\n\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  };\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = new Date().getTime(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n    fn = bind(this, fn);\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.on('dispose', disposeFn);\n    return timeoutId;\n  };\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.off('dispose', disposeFn);\n    return timeoutId;\n  };\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.on('dispose', disposeFn);\n    return intervalId;\n  };\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.off('dispose', disposeFn);\n    return intervalId;\n  };\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.on('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.setTimeout(fn, 1000 / 60);\n  };\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.off('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.clearTimeout(id);\n  };\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    return ComponentToRegister;\n  };\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\nvar FullscreenApi = {}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'], // Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\nvar specApi = apiMap[0];\nvar browserApi; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      } // Hide controls and note if they were enabled.\n\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  };\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  };\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  };\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  };\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  };\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  _proto.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', bind(this, function () {\n      this.queueTrigger('change');\n    }));\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @returns  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings.default;\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_assertThisInitialized(_this)), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (mode !== 'disabled') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          } else {\n            this.tech_.off('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _assertThisInitialized(_assertThisInitialized(_this)));\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this.default = track.default;\n    Object.defineProperties(_assertThisInitialized(_assertThisInitialized(_this)), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_assertThisInitialized(_this))\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nvar ALL = mergeOptions(NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tech, _Component);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    }\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  };\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  };\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  _proto.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  };\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  };\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  };\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  _proto.reset = function reset() {};\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  };\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  };\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  };\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  _proto.setPoster = function setPoster() {};\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  _proto.playsinline = function playsinline() {};\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  _proto.setPlaysinline = function setPlaysinline() {};\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {};\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {};\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  };\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  };\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    var _this;\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl$$1(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  };\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  _proto.handleClick = function handleClick(event) {};\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  _proto.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  _proto.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    player.on('posterchange', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  _proto.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  };\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  };\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n    var updateDisplayHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateDisplay);\n    player.on('loadstart', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_assertThisInitialized(_this)), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  };\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    this.clearDisplay(); // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  _proto.updateForTrack = function updateForTrack(track) {\n    if (typeof window$1.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  _proto.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  };\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  };\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  };\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    if (options.replay) {\n      _this.on(player, 'ended', _this.handleEnded);\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  };\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  };\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\nvar TimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.throttledUpdateContent = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateContent), 25);\n\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  _proto.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  _proto.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  _proto.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CurrentTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    this.updateFormattedTime_(time);\n  };\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  _proto.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  _proto.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    } // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  };\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus(e) {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  };\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  };\n  /**\n   * Dispose of the element and stop tracking\n   */\n\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Slider, _Component);\n\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  };\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  };\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  };\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  _proto.createEl = function createEl$$1(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  };\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  _proto.handleMouseMove = function handleMouseMove(event) {};\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  };\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  _proto.update = function update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    } // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n\n\n    var progress = this.getPercent();\n    var bar = this.bar; // If there's no bar...\n\n    if (!bar) {\n      return;\n    } // Protect against no duration and other division issues\n\n\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    } // Convert to a percentage for setting\n\n\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style; // Set the new bar width or height\n\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  };\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  _proto.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack(); // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n\n  _proto.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\"><span>\" + this.localize('Loaded') + \"</span>: <span class=\\\"vjs-control-text-loaded-percentage\\\">0%</span></span>\"\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  _proto.update = function update(event) {\n    var liveTracker = this.player_.liveTracker;\n    var buffered = this.player_.buffered();\n    var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n    var controlTextPercentage = this.$('.vjs-control-text-loaded-percentage'); // get the percent width of a time compared to the total end\n\n    var percentify = function percentify(time, end, rounded) {\n      // no NaN\n      var percent = time / end || 0;\n      percent = (percent >= 1 ? 1 : percent) * 100;\n\n      if (rounded) {\n        percent = percent.toFixed(2);\n      }\n\n      return percent + '%';\n    }; // update the width of the progress bar\n\n\n    this.el_.style.width = percentify(bufferedEnd, duration); // update the control-text\n\n    textContent(controlTextPercentage, percentify(bufferedEnd, duration, true)); // add child elements to represent the individual buffered time ranges\n\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      } // set the percent based on the width of the progress bar (bufferedEnd)\n\n\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    } // remove unused buffered range elements\n\n\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeTooltip.prototype;\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  };\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    textContent(this.el_, content);\n  };\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var content;\n\n      var duration = _this.player_.duration();\n\n      if (_this.player_.liveTracker && _this.player_.liveTracker.isLive()) {\n        var liveWindow = _this.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PlayProgressBar.prototype;\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  };\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update), 25);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\nvar STEP_SECONDS = 5; // The interval at which the bar should update as it progresses.\n\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n    this.on(this.player_, 'durationchange', this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function (e) {\n      if (_this2.player_.liveTracker && _this2.player_.liveTracker.isLive() && e.type !== 'ended') {\n        return;\n      }\n\n      _this2.clearInterval(_this2.updateInterval);\n    });\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  _proto.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  _proto.update_ = function update_(currentTime, percent) {\n    var liveTracker = this.player_.liveTracker;\n    var duration = this.player_.duration();\n\n    if (liveTracker && liveTracker.isLive()) {\n      duration = this.player_.liveTracker.liveCurrentTime();\n    }\n\n    if (liveTracker && liveTracker.seekableEnd() === Infinity) {\n      this.disable();\n    } else {\n      this.enable();\n    } // machine readable value of progress bar (percentage complete)\n\n\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2)); // human readable value of progress bar (time complete)\n\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}')); // Update the `PlayProgressBar`.\n\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  _proto.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent >= 1 ? 1 : percent || 0;\n  };\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  _proto.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  _proto.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\n\nSeekBar.prototype.playerEvent = 'timeupdate';\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseSeek), 25);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  };\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  };\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  };\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  };\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_assertThisInitialized(_this)), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  };\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_assertThisInitialized(_this)), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  };\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  };\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n\n    return _this;\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('blur', bind(this, this.handleBlur));\n    component.on(['tap', 'click'], bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton(); // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  _proto.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  };\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward(); // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  };\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  };\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.menu.show();\n    });\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  _proto.createItems = function createItems() {};\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  };\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  };\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  };\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  _proto.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  _proto.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (event.which !== 9) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.el_.focus();\n      } // Enter (13) or Up (38) key or Down (40) key press the 'button'\n\n    } else if (event.which === 13 || event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (event.which !== 9) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  };\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  };\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    }\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  };\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  };\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  };\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  };\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  };\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  };\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  _proto.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer =\n/*#__PURE__*/\nfunction (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config.default : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  };\n  /**\n   * Update display of text track settings\n   */\n\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/* track when we are at the live edge, and other helpers for live playback */\n\nvar LiveTracker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  function LiveTracker(player, options) {\n    var _this;\n\n    // LiveTracker does not need an element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', _this.handleDurationchange);\n\n    return _this;\n  }\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.isBehind_ = function isBehind_() {\n    // don't report that we are behind until a timeupdate has been seen\n    if (!this.timeupdateSeen_) {\n      return false;\n    }\n\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime();\n    var seekableIncrement = this.seekableIncrement_; // the live edge window is the amount of seconds away from live\n    // that a player can be, but still be considered live.\n    // we add 0.07 because the live tracking happens every 30ms\n    // and we want some wiggle room for short segment live playback\n\n    var liveEdgeWindow = seekableIncrement * 2 + 0.07; // on Android liveCurrentTime can bee Infinity, because seekableEnd\n    // can be Infinity, so we handle that case.\n\n    return liveCurrentTime !== Infinity && liveCurrentTime - liveEdgeWindow >= currentTime;\n  }; // all the functionality for tracking when seek end changes\n  // and for tracking how far past seek end we should be\n\n\n  _proto.trackLive_ = function trackLive_() {\n    this.pastSeekEnd_ = this.pastSeekEnd_;\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newSeekEnd = this.seekableEnd(); // we can only tell if we are behind live, when seekable changes\n    // once we detect that seekable has changed we check the new seek\n    // end against current time, with a fudge value of half a second.\n\n    if (newSeekEnd !== this.lastSeekEnd_) {\n      if (this.lastSeekEnd_) {\n        this.seekableIncrement_ = Math.abs(newSeekEnd - this.lastSeekEnd_);\n      }\n\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = newSeekEnd;\n      this.trigger('seekableendchange');\n    }\n\n    this.pastSeekEnd_ = this.pastSeekEnd() + 0.03;\n\n    if (this.isBehind_() !== this.behindLiveEdge()) {\n      this.behindLiveEdge_ = this.isBehind_();\n      this.trigger('liveedgechange');\n    }\n  };\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    if (this.player_.duration() === Infinity) {\n      this.startTracking();\n    } else {\n      this.stopTracking();\n    }\n  };\n  /**\n   * start tracking live playback\n   */\n\n\n  _proto.startTracking = function startTracking() {\n    var _this2 = this;\n\n    if (this.isTracking()) {\n      return;\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLive_, 30);\n    this.trackLive_();\n    this.on(this.player_, 'play', this.trackLive_);\n    this.on(this.player_, 'pause', this.trackLive_);\n    this.one(this.player_, 'play', this.handlePlay); // this is to prevent showing that we are not live\n    // before a video starts to play\n\n    if (!this.timeupdateSeen_) {\n      this.handleTimeupdate = function () {\n        _this2.timeupdateSeen_ = true;\n        _this2.handleTimeupdate = null;\n      };\n\n      this.one(this.player_, 'timeupdate', this.handleTimeupdate);\n    }\n  };\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n  };\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n\n\n  _proto.reset_ = function reset_() {\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = null;\n    this.behindLiveEdge_ = null;\n    this.timeupdateSeen_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.seekableIncrement_ = 12;\n    this.off(this.player_, 'play', this.trackLive_);\n    this.off(this.player_, 'pause', this.trackLive_);\n    this.off(this.player_, 'play', this.handlePlay);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n\n    if (this.handleTimeupdate) {\n      this.off(this.player_, 'timeupdate', this.handleTimeupdate);\n      this.handleTimeupdate = null;\n    }\n  };\n  /**\n   * stop tracking live playback\n   */\n\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n  };\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   */\n\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  };\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   */\n\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  };\n  /**\n   * Get the live time window\n   */\n\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime();\n\n    if (liveCurrentTime === Infinity) {\n      return Infinity;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  };\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   */\n\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  };\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   */\n\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  };\n  /**\n   * get what we expect the live current time to be\n   */\n\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  };\n  /**\n   * Returns how far past seek end we expect current time to be\n   */\n\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    return this.pastSeekEnd_;\n  };\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   */\n\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  };\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  };\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.player_.currentTime(this.liveCurrentTime());\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component);\n\nComponent.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nfunction _templateObject$1() {\n  var data = _taggedTemplateLiteralLoose([\"Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\\n            This may prevent text tracks from loading.\"]);\n\n  _templateObject$1 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 =\n/*#__PURE__*/\nfunction (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn(tsml(_templateObject$1()));\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  };\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  };\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  };\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  };\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  };\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  };\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  _proto.createEl = function createEl$$1() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  _proto.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  };\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  };\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  };\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  };\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play(); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  };\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  };\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n\nif (isReal()) {\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks(); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\nfunction _templateObject$2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n        Using the tech directly can be dangerous. I hope you know what you're doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      \"]);\n\n  _templateObject$2 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n// on the player when they happen\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    var _this;\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // create logger\n\n    _this.log = createLogger$1(_this.id_); // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    } // Cache for video property values.\n\n\n    _this.cache_ = {}; // Set poster\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Set default values for lastVolume\n\n    _this.cache_.lastVolume = 1; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls'); // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.options_.autoplay = true;\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Set default value for lastPlaybackRate\n\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_assertThisInitialized(_this)), {\n      eventBusKey: 'el_'\n    });\n\n    if (_this.fluid_) {\n      _this.on('playerreset', _this.updateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      var plugins = options.plugins;\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error(\"plugin \\\"\" + name$$1 + \"\\\" does not exist\");\n        }\n      }, _assertThisInitialized(_assertThisInitialized(_this)));\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n    // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_assertThisInitialized(_this)); // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  _proto.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  };\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  };\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  };\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  _proto.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off('playerreset', this.updateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(function () {\n        this.on('playerreset', this.updateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  };\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  };\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  };\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2[\"handleTech\" + toTitleCase(event) + \"_\"]);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this2),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this2[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this3 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn(tsml(_templateObject$2()));\n    }\n\n    return this.tech_;\n  };\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  };\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  };\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay());\n  };\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this4 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this4.muted();\n\n      _this4.muted(true);\n\n      var playPromise = _this4.play();\n\n      if (!playPromise || !playPromise.then || !playPromise.catch) {\n        return;\n      }\n\n      return playPromise.catch(function (e) {\n        // restore old value of muted on failure\n        _this4.muted(previouslyMuted);\n      });\n    };\n\n    var promise;\n\n    if (type === 'any') {\n      promise = this.play();\n\n      if (promise && promise.then && promise.catch) {\n        promise.catch(function () {\n          return muted();\n        });\n      }\n    } else if (type === 'muted') {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!promise || !promise.then || !promise.catch) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this4.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    }).catch(function (e) {\n      _this4.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  };\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  };\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this5 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this5.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the intial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            var techSrc = _this5.techGet('currentSrc');\n\n            _this5.lastSource_.tech = techSrc;\n\n            _this5.updateSourceCaches_(techSrc);\n          }\n\n          _this5.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  };\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  };\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this6 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this6.currentTime()) {\n        _this6.removeClass('vjs-waiting');\n\n        _this6.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  };\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  };\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  };\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  };\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  };\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  };\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  };\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  };\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  };\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  };\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      if (this.isFullscreen()) {\n        this.exitFullscreen();\n      } else {\n        this.requestFullscreen();\n      }\n    }\n  };\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  _proto.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('fullscreenchange');\n  };\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  };\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  };\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  };\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  };\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log(e);\n      throw e;\n    }\n  };\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n\n\n  _proto.play = function play() {\n    var _this7 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this7.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  };\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n\n\n  _proto.play_ = function play_(callback) {\n    var _this8 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    } // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n\n\n    if (!this.isReady_) {\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this8.playWaitingForReady_ = false;\n        callback(_this8.play());\n      }); // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      callback(this.techGet_('play'));\n      return; // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n      this.playOnLoadstart_ = function () {\n        _this8.playOnLoadstart_ = null;\n        callback(_this8.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  };\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n\n        if (this.options_.liveui && this.player_.liveTracker) {\n          this.addClass('vjs-liveui');\n        }\n      } else {\n        this.removeClass('vjs-live');\n        this.removeClass('vjs-liveui');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  };\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  }; //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n\n\n  _proto.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  };\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  };\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  };\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n\n    return !!this.isFullscreen_;\n  };\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  _proto.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]); // If cancelling fullscreen, remove event listener.\n\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n\n\n        this.trigger('fullscreenchange');\n      }));\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  };\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n    this.isFullscreen(false); // Check for browser element fullscreen support\n\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  };\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey)); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  };\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  };\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this9 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this9.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  _proto.src = function src(source) {\n    var _this10 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // intial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this10.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this10.cache_.sources = sources;\n\n      _this10.updateSourceCaches_(middlewareSource);\n\n      var err = _this10.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this10.src(sources.slice(1));\n        }\n\n        _this10.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this10.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this10.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this10.tech_);\n    });\n  };\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  _proto.src_ = function src_(source) {\n    var _this11 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this11.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  };\n  /**\n   * Begin loading the src data.\n   */\n\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  };\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n\n\n  _proto.reset = function reset() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  };\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  };\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = techAutoplay || this.options_.autoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  };\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  };\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  };\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  };\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  };\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  };\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  };\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  };\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp); // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  };\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  };\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  _proto.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  _proto.createModal = function createModal(content, options) {\n    var _this12 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this12.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  };\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  };\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  };\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  };\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  };\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  };\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  };\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player; // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  };\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  _proto.trigger = function trigger$$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  _proto.handleStateChanged = function handleStateChanged(e) {};\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  };\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits$1 = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits$1(subClass, superClass); // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style$1 = $('.vjs-styles-defaults');\n\n  if (!style$1) {\n    style$1 = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style$1, head.firstChild);\n    }\n\n    setTextContent(style$1, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs$1.players = Player.players;\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn(\"The \" + name$$1 + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\nvideojs$1.getTech = Tech.getTech;\nvideojs$1.registerTech = Tech.registerTech;\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs$1.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs$1.extend = extend;\nvideojs$1.mergeOptions = mergeOptions;\nvideojs$1.bind = bind;\nvideojs$1.registerPlugin = Plugin.registerPlugin;\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name$$1, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\nvideojs$1.getPlugins = Plugin.getPlugins;\nvideojs$1.getPlugin = Plugin.getPlugin;\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs$1.log = log;\nvideojs$1.createLogger = createLogger$1;\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\nvideojs$1.formatTime = formatTime;\nvideojs$1.setFormatTime = setFormatTime;\nvideojs$1.resetFormatTime = resetFormatTime;\nvideojs$1.parseUrl = parseUrl;\nvideojs$1.isCrossOrigin = isCrossOrigin;\nvideojs$1.EventTarget = EventTarget;\nvideojs$1.on = on;\nvideojs$1.one = one;\nvideojs$1.off = off;\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = xhr;\nvideojs$1.TextTrack = TextTrack;\nvideojs$1.AudioTrack = AudioTrack;\nvideojs$1.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs$1.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs$1.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.5.1\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\n/**\n * @file resolve-url.js\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$1 = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$1 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal and the media\n  // sequence number is unchanged\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls, withCredentials) {\n    classCallCheck(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n\n    return _this;\n  }\n\n  createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr$$1, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr$$1.status,\n        message: 'HLS playlist request error at URL: ' + url,\n        responseText: xhr$$1.responseText,\n        code: xhr$$1.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    } // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr$$1, url) {\n      var _this2 = this; // any in-flight request is now finished\n\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var parser = new Parser();\n      parser.push(xhr$$1.responseText);\n      parser.end();\n      parser.manifest.uri = url; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n      var update = updateMaster(this.master, parser.manifest);\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      } // refresh live playlists after a target duration passes\n\n\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been\n      // specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to fully loaded playlists immediately\n\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (resolveUrl(this.master.uri, playlist.uri) === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.master.uri, playlist.uri),\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser();\n        parser.push(req.responseText);\n        parser.end();\n        _this5.state = 'HAVE_MASTER';\n        parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n\n          return;\n        } // loaded a media playlist\n        // infer a master playlist if none was previously requested\n\n\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n        _this5.master.playlists[0].resolvedUri = _this5.srcUrl; // m3u8-parser does not attach an attributes property to media playlists so make\n        // sure that the property is attached to avoid undefined reference errors\n\n        _this5.master.playlists[0].attributes = _this5.master.playlists[0].attributes || {};\n\n        _this5.haveMetadata(req, _this5.srcUrl);\n\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr$$1 = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr$$1;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils =\n/*#__PURE__*/\nObject.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n/**\n * @file time.js\n */\n\n/**\n * Checks whether a given time is within a segment based on its start time\n * and duration. For playerTime, the requested time is in seconds, for\n * streamTime, the time is a Date object.\n *\n * @param {Date|Number} requestedTime Time to check is within a segment\n * @param {\"stream\" | \"player\"} type Whether passing in a playerTime or streamTime\n * @param {Date|Number} segmentStart The start time of the segment\n * @param {Number} duration Segment duration in seconds\n */\n\nvar timeWithinSegment = function timeWithinSegment(requestedTime, type, segmentStart, duration) {\n  var endTime = void 0;\n\n  if (type === 'stream') {\n    endTime = new Date(duration * 1000 + segmentStart.getTime());\n    var requestedTimeString = requestedTime.toISOString();\n    var segmentTimeString = segmentStart.toISOString();\n    var endTimeString = endTime.toISOString();\n    return segmentTimeString <= requestedTimeString && requestedTimeString <= endTimeString;\n  } else if (type === 'player') {\n    endTime = duration + segmentStart;\n    return segmentStart <= requestedTime && requestedTime <= endTime;\n  }\n};\n/**\n * Finds a segment that contains the time requested. This might be an estimate or\n * an accurate match.\n *\n * @param {Date|Number} time The streamTime or playerTime to find a matching segment for\n * @param {\"stream\" | \"player\"} type Either the playerTime or streamTime\n * @param {Object} playlist A playlist object\n * @return {Object} match\n * @return {Object} match.segment The matched segment from the playlist\n * @return {Date|Number} match.estimatedStart The estimated start time of the segment\n * @return {\"accurate\" | \"estimate\"} match.type Whether the match is estimated or accurate\n */\n\n\nvar findSegmentForTime = function findSegmentForTime(time, type, playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  if (type !== 'player' && type !== 'stream') {\n    return null;\n  }\n\n  var manifestTime = 0;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n    var estimatedEnd = manifestTime + segment.duration;\n    var segmentStart = void 0;\n    var estimatedStart = void 0;\n\n    if (type === 'player') {\n      segmentStart = segment.start;\n      estimatedStart = manifestTime;\n    } else {\n      // we can rely on the program date time being accurate\n      segmentStart = segment.dateTimeObject;\n      estimatedStart = segment.dateTimeObject;\n    }\n\n    var timeWithinSegmentEnd = typeof segment.start !== 'undefined' && typeof segment.end !== 'undefined' && timeWithinSegment(time, type, segmentStart, segment.end - segment.start);\n    var timeWithinSegmentDuration = timeWithinSegment(time, type, estimatedStart, segment.duration);\n\n    if (timeWithinSegmentEnd) {\n      return {\n        segment: segment,\n        estimatedStart: estimatedStart,\n        type: 'accurate'\n      };\n    } else if (timeWithinSegmentDuration) {\n      return {\n        segment: segment,\n        estimatedStart: estimatedStart,\n        type: 'estimate'\n      };\n    }\n\n    manifestTime = estimatedEnd;\n  }\n\n  return null;\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {Number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  // - segment.start and segment.end only come\n  //    from syncController\n  return findSegmentForTime(time, 'player', playlist);\n};\n/**\n * Finds a segment that contains the stream time give as an ISO-8601 string.\n *\n * @param {String} streamTime The ISO-8601 streamTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForStreamTime = function findSegmentForStreamTime(streamTime, playlist) {\n  var dateTimeObject = void 0;\n\n  try {\n    dateTimeObject = new Date(streamTime);\n  } catch (e) {\n    // TODO something here?\n    return null;\n  } // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n\n\n  return findSegmentForTime(dateTimeObject, 'stream', playlist);\n};\n/**\n * Gives the offset of the comparisonTimestamp from the streamTime timestamp in seconds.\n * If the offset returned is positive, the streamTime occurs before the comparisonTimestamp.\n * If the offset is negative, the streamTime occurs before the comparisonTimestamp.\n *\n * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {String} streamTime The streamTime as an ISO-8601 string\n * @return {Number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, streamTime) {\n  var segmentDateTime = void 0;\n  var streamDateTime = void 0;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    streamDateTime = new Date(streamTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var streamTimeEpoch = streamDateTime.getTime();\n  return (streamTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the streamTime  of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {Number} time A playerTime in seconds\n * @param {Function} callback(err, streamTime)\n * @returns {String} err.message A detailed error message\n * @returns {Object} streamTime\n * @returns {Number} streamTime.mediaSeconds The streamTime in seconds\n * @returns {String} streamTime.programDateTime The streamTime as an ISO-8601 String\n */\n\n\nvar getStreamTime = function getStreamTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === undefined ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getStreamTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getStreamTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid streamTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate streamTime could not be determined. Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var streamTime = {\n    mediaSeconds: time\n  };\n\n  if (matchedSegment.segment.dateTimeObject) {\n    // TODO this is currently the time of the beginning of the\n    // segment. This still needs to be modified to be offset\n    // by the time requested.\n    streamTime.programDateTime = matchedSegment.segment.dateTimeObject.toISOString();\n  }\n\n  return callback(null, streamTime);\n};\n/**\n * Seeks in the player to a time that matches the given streamTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {String} args.streamTime A streamTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @returns {String} err.message A detailed error message\n * @returns {Number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToStreamTime = function seekToStreamTime(_ref2) {\n  var streamTime = _ref2.streamTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToStreamTime: callback must be provided');\n  }\n\n  if (typeof streamTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToStreamTime: streamTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForStreamTime(streamTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: streamTime + ' was not found in the stream'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: streamTime + ' is not buffered yet. Try again'\n      });\n    }\n\n    return seekToStreamTime({\n      streamTime: streamTime,\n      playlist: playlist,\n      retryCount: retryCount - 1,\n      seekTo: seekTo,\n      pauseAfterSeek: pauseAfterSeek,\n      tech: tech,\n      callback: callback\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, streamTime);\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset;\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n\n    var toUnsigned = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned\n    };\n    var toUnsigned$1 = bin.toUnsigned;\n\n    var _findBox, parseType, timescale, startTime, getVideoTrackIds; // Find the data for a box specified by its path\n\n\n    _findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$1(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n        type = parseType(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n\n        i = end;\n      } // we've finished searching all of data\n\n\n      return results;\n    };\n    /**\n     * Returns the string representation of an ASCII encoded four byte buffer.\n     * @param buffer {Uint8Array} a four-byte buffer to translate\n     * @return {string} the corresponding string\n     */\n\n\n    parseType = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n\n\n    timescale = function timescale(init) {\n      var result = {},\n          traks = _findBox(init, ['moov', 'trak']); // mdhd timescale\n\n\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n        tkhd = _findBox(trak, ['tkhd'])[0];\n\n        if (!tkhd) {\n          return null;\n        }\n\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned$1(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n        mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n\n        if (!mdhd) {\n          return null;\n        }\n\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned$1(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n\n\n    startTime = function startTime(timescale, fragment) {\n      var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n      trafs = _findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n      baseTimes = [].concat.apply([], trafs.map(function (traf) {\n        return _findBox(traf, ['tfhd']).map(function (tfhd) {\n          var id, scale, baseTime; // get the track id from the tfhd\n\n          id = toUnsigned$1(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n          scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n          baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n            var version, result;\n            version = tfdt[0];\n            result = toUnsigned$1(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n            if (version === 1) {\n              result *= Math.pow(2, 32);\n              result += toUnsigned$1(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n            }\n\n            return result;\n          })[0];\n          baseTime = baseTime || Infinity; // convert base time to seconds\n\n          return baseTime / scale;\n        });\n      })); // return the minimum\n\n      result = Math.min.apply(null, baseTimes);\n      return isFinite(result) ? result : 0;\n    };\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n\n\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = _findBox(init, ['moov', 'trak']);\n\n      var videoTrackIds = [];\n      traks.forEach(function (trak) {\n        var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n\n        var tkhds = _findBox(trak, ['tkhd']);\n\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n      return videoTrackIds;\n    };\n\n    var probe = {\n      findBox: _findBox,\n      parseType: parseType,\n      timescale: timescale,\n      startTime: startTime,\n      videoTrackIds: getVideoTrackIds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2014 Brightcove\n     * All rights reserved.\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream; // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = [];\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n\n\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData\n    };\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n    var silence = makeTable(coneOfSilence);\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n    var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n        return;\n      }\n\n      silentFrame = silence[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        frames.splice(i, 0, {\n          data: silentFrame\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable$1 = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable$1,\n      concatenateFrameData: concatenateFrameData\n    };\n    var ONE_SECOND_IN_TS$2 = 90000; // 90kHz clock\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$2;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // -----------------\n    // Link To Transport\n    // -----------------\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    };\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, discard the\n        // data; we don't want jumbled captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          // eslint-disable-next-line no-console\n          console.error('Skipping malformed caption.');\n          return '';\n        }\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (char) {\n      return char >= 0x20 && char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this);\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          }); // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++; // Remove the finished frame from the buffer and start the process again\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        } // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2016 Brightcove\n     * All rights reserved.\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType$1 = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591$1(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType$1,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData$1 = utils.isLikelyAacData; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility']; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames, gopForFusion, gops, moof, mdat, boxes; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        })); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.startTime -= timelineStartPts;\n        }\n\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.endTime -= timelineStartPts;\n        }\n\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts;\n\n        if (!this.keepOriginalTimestamps) {\n          id3.cueTime -= timelineStartPts;\n        }\n\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n\n      this.trigger('data', event); // Only emit `done` if all tracks have been flushed and emitted\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              }); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (!options.keepOriginalTimestamps) {\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n\n          if (!options.keepOriginalTimestamps) {\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData$1(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES\n    };\n\n    var inspectMp4,\n        _textifyMp,\n        parseType$2 = probe.parseType,\n        parseMp4Date = function parseMp4Date(seconds) {\n      return new Date(seconds * 1000 - 2082844800000);\n    },\n        parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    },\n        nalParse = function nalParse(avcStream) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          i,\n          length;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x01:\n            result.push('slice_layer_without_partitioning_rbsp');\n            break;\n\n          case 0x05:\n            result.push('slice_layer_without_partitioning_rbsp_idr');\n            break;\n\n          case 0x06:\n            result.push('sei_rbsp');\n            break;\n\n          case 0x07:\n            result.push('seq_parameter_set_rbsp');\n            break;\n\n          case 0x08:\n            result.push('pic_parameter_set_rbsp');\n            break;\n\n          case 0x09:\n            result.push('access_unit_delimiter_rbsp');\n            break;\n\n          default:\n            result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n            break;\n        }\n      }\n\n      return result;\n    },\n        // registry of handlers for individual mp4 box types\n    parse$$1 = {\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      avc1: function avc1(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          dataReferenceIndex: view.getUint16(6),\n          width: view.getUint16(24),\n          height: view.getUint16(26),\n          horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n          vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n          frameCount: view.getUint16(40),\n          depth: view.getUint16(74),\n          config: inspectMp4(data.subarray(78, data.byteLength))\n        };\n      },\n      avcC: function avcC(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n            numOfSequenceParameterSets = data[5] & 0x1f,\n            numOfPictureParameterSets,\n            nalSize,\n            offset,\n            i; // iterate past any SPSs\n\n        offset = 6;\n\n        for (i = 0; i < numOfSequenceParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        } // iterate past any PPSs\n\n\n        numOfPictureParameterSets = data[offset];\n        offset++;\n\n        for (i = 0; i < numOfPictureParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n\n        return result;\n      },\n      btrt: function btrt(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          bufferSizeDB: view.getUint32(0),\n          maxBitrate: view.getUint32(4),\n          avgBitrate: view.getUint32(8)\n        };\n      },\n      esds: function esds(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          esId: data[6] << 8 | data[7],\n          streamPriority: data[8] & 0x1f,\n          decoderConfig: {\n            objectProfileIndication: data[11],\n            streamType: data[12] >>> 2 & 0x3f,\n            bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n            maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n            avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n            decoderConfigDescriptor: {\n              tag: data[24],\n              length: data[25],\n              audioObjectType: data[26] >>> 3 & 0x1f,\n              samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n              channelConfiguration: data[27] >>> 3 & 0x0f\n            }\n          }\n        };\n      },\n      ftyp: function ftyp(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          majorBrand: parseType$2(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n            i = 8;\n\n        while (i < data.byteLength) {\n          result.compatibleBrands.push(parseType$2(data.subarray(i, i + 4)));\n          i += 4;\n        }\n\n        return result;\n      },\n      dinf: function dinf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      dref: function dref(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          dataReferences: inspectMp4(data.subarray(8))\n        };\n      },\n      hdlr: function hdlr(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType$2(data.subarray(8, 12)),\n          name: ''\n        },\n            i = 8; // parse out the name field\n\n        for (i = 24; i < data.byteLength; i++) {\n          if (data[i] === 0x00) {\n            // the name field is null-terminated\n            i++;\n            break;\n          }\n\n          result.name += String.fromCharCode(data[i]);\n        } // decode UTF-8 to javascript's internal representation\n        // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n\n        result.name = decodeURIComponent(escape(result.name));\n        return result;\n      },\n      mdat: function mdat(data) {\n        return {\n          byteLength: data.byteLength,\n          nals: nalParse(data)\n        };\n      },\n      mdhd: function mdhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            language,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n        // each field is the packed difference between its ASCII value and 0x60\n\n        language = view.getUint16(i);\n        result.language += String.fromCharCode((language >> 10) + 0x60);\n        result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n        result.language += String.fromCharCode((language & 0x1f) + 0x60);\n        return result;\n      },\n      mdia: function mdia(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mfhd: function mfhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n      },\n      minf: function minf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      mp4a: function mp4a(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n        }; // if there are more bytes to process, assume this is an ISO/IEC\n        // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n        if (data.byteLength > 28) {\n          result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n        }\n\n        return result;\n      },\n      moof: function moof(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      moov: function moov(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvex: function mvex(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvhd: function mvhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // convert fixed-point, base 16 back to a number\n\n        result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        i += 2 * 4;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        i += 6 * 4;\n        result.nextTrackId = view.getUint32(i);\n        return result;\n      },\n      pdin: function pdin(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          rate: view.getUint32(4),\n          initialDelay: view.getUint32(8)\n        };\n      },\n      sdtp: function sdtp(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            i;\n\n        for (i = 4; i < data.byteLength; i++) {\n          result.samples.push({\n            dependsOn: (data[i] & 0x30) >> 4,\n            isDependedOn: (data[i] & 0x0c) >> 2,\n            hasRedundancy: data[i] & 0x03\n          });\n        }\n\n        return result;\n      },\n      sidx: function sidx(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          references: [],\n          referenceId: view.getUint32(4),\n          timescale: view.getUint32(8),\n          earliestPresentationTime: view.getUint32(12),\n          firstOffset: view.getUint32(16)\n        },\n            referenceCount = view.getUint16(22),\n            i;\n\n        for (i = 24; referenceCount; i += 12, referenceCount--) {\n          result.references.push({\n            referenceType: (data[i] & 0x80) >>> 7,\n            referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n            subsegmentDuration: view.getUint32(i + 4),\n            startsWithSap: !!(data[i + 8] & 0x80),\n            sapType: (data[i + 8] & 0x70) >>> 4,\n            sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n          });\n        }\n\n        return result;\n      },\n      smhd: function smhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          balance: data[4] + data[5] / 256\n        };\n      },\n      stbl: function stbl(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      stco: function stco(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.chunkOffsets.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stsc: function stsc(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            entryCount = view.getUint32(4),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n            i;\n\n        for (i = 8; entryCount; i += 12, entryCount--) {\n          result.sampleToChunks.push({\n            firstChunk: view.getUint32(i),\n            samplesPerChunk: view.getUint32(i + 4),\n            sampleDescriptionIndex: view.getUint32(i + 8)\n          });\n        }\n\n        return result;\n      },\n      stsd: function stsd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleDescriptions: inspectMp4(data.subarray(8))\n        };\n      },\n      stsz: function stsz(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n            i;\n\n        for (i = 12; i < data.byteLength; i += 4) {\n          result.entries.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stts: function stts(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.timeToSamples.push({\n            sampleCount: view.getUint32(i),\n            sampleDelta: view.getUint32(i + 4)\n          });\n        }\n\n        return result;\n      },\n      styp: function styp(data) {\n        return parse$$1.ftyp(data);\n      },\n      tfdt: function tfdt(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n\n        if (result.version === 1) {\n          result.baseMediaDecodeTime *= Math.pow(2, 32);\n          result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n        }\n\n        return result;\n      },\n      tfhd: function tfhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n            baseDataOffsetPresent = result.flags[2] & 0x01,\n            sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n            defaultSampleDurationPresent = result.flags[2] & 0x08,\n            defaultSampleSizePresent = result.flags[2] & 0x10,\n            defaultSampleFlagsPresent = result.flags[2] & 0x20,\n            durationIsEmpty = result.flags[0] & 0x010000,\n            defaultBaseIsMoof = result.flags[0] & 0x020000,\n            i;\n        i = 8;\n\n        if (baseDataOffsetPresent) {\n          i += 4; // truncate top 4 bytes\n          // FIXME: should we read the full 64 bits?\n\n          result.baseDataOffset = view.getUint32(12);\n          i += 4;\n        }\n\n        if (sampleDescriptionIndexPresent) {\n          result.sampleDescriptionIndex = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleDurationPresent) {\n          result.defaultSampleDuration = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleSizePresent) {\n          result.defaultSampleSize = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleFlagsPresent) {\n          result.defaultSampleFlags = view.getUint32(i);\n        }\n\n        if (durationIsEmpty) {\n          result.durationIsEmpty = true;\n        }\n\n        if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n          result.baseDataOffsetIsMoof = true;\n        }\n\n        return result;\n      },\n      tkhd: function tkhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4;\n        i += 2 * 4;\n        result.layer = view.getUint16(i);\n        i += 2;\n        result.alternateGroup = view.getUint16(i);\n        i += 2; // convert fixed-point, base 16 back to a number\n\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        return result;\n      },\n      traf: function traf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trak: function trak(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trex: function trex(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4),\n          defaultSampleDescriptionIndex: view.getUint32(8),\n          defaultSampleDuration: view.getUint32(12),\n          defaultSampleSize: view.getUint32(16),\n          sampleDependsOn: data[20] & 0x03,\n          sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n          sampleHasRedundancy: (data[21] & 0x30) >> 4,\n          samplePaddingValue: (data[21] & 0x0e) >> 1,\n          sampleIsDifferenceSample: !!(data[21] & 0x01),\n          sampleDegradationPriority: view.getUint16(22)\n        };\n      },\n      trun: function trun(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01,\n            // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04,\n            // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01,\n            // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02,\n            // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04,\n            // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n            // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n            offset = 8,\n            sample;\n\n        if (dataOffsetPresent) {\n          // 32 bit signed integer\n          result.dataOffset = view.getInt32(offset);\n          offset += 4;\n        } // Overrides the flags for the first sample only. The order of\n        // optional values will be: duration, size, compositionTimeOffset\n\n\n        if (firstSampleFlagsPresent && sampleCount) {\n          sample = {\n            flags: parseSampleFlags(data.subarray(offset, offset + 4))\n          };\n          offset += 4;\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n          sampleCount--;\n        }\n\n        while (sampleCount--) {\n          sample = {};\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleFlagsPresent) {\n            sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n        }\n\n        return result;\n      },\n      'url ': function url(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      },\n      vmhd: function vmhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          graphicsmode: view.getUint16(4),\n          opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n        };\n      }\n    };\n    /**\n     * Return a javascript array of box objects parsed from an ISO base\n     * media file.\n     * @param data {Uint8Array} the binary data of the media to be inspected\n     * @return {array} a javascript array of potentially nested box objects\n     */\n\n\n    inspectMp4 = function inspectMp4(data) {\n      var i = 0,\n          result = [],\n          view,\n          size,\n          type,\n          end,\n          box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n      var ab = new ArrayBuffer(data.length);\n      var v = new Uint8Array(ab);\n\n      for (var z = 0; z < data.length; ++z) {\n        v[z] = data[z];\n      }\n\n      view = new DataView(ab);\n\n      while (i < data.byteLength) {\n        // parse box data\n        size = view.getUint32(i);\n        type = parseType$2(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n        box = (parse$$1[type] || function (data) {\n          return {\n            data: data\n          };\n        })(data.subarray(i + 8, end));\n\n        box.size = size;\n        box.type = type; // store this box and move to the next\n\n        result.push(box);\n        i = end;\n      }\n\n      return result;\n    };\n    /**\n     * Returns a textual representation of the javascript represtentation\n     * of an MP4 file. You can use it as an alternative to\n     * JSON.stringify() to compare inspected MP4s.\n     * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n     * file\n     * @param depth {number} (optional) the number of ancestor boxes of\n     * the elements of inspectedMp4. Assumed to be zero if unspecified.\n     * @return {string} a text representation of the parsed MP4\n     */\n\n\n    _textifyMp = function textifyMp4(inspectedMp4, depth) {\n      var indent;\n      depth = depth || 0;\n      indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n      return inspectedMp4.map(function (box, index) {\n        // list the box type first at the current indentation level\n        return indent + box.type + '\\n' + // the type is already included and handle child boxes separately\n        Object.keys(box).filter(function (key) {\n          return key !== 'type' && key !== 'boxes'; // output all the box properties\n        }).map(function (key) {\n          var prefix = indent + '  ' + key + ': ',\n              value = box[key]; // print out raw bytes as hexademical\n\n          if (value instanceof Uint8Array || value instanceof Uint32Array) {\n            var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (byte) {\n              return ' ' + ('00' + byte.toString(16)).slice(-2);\n            }).join('').match(/.{1,24}/g);\n\n            if (!bytes) {\n              return prefix + '<>';\n            }\n\n            if (bytes.length === 1) {\n              return prefix + '<' + bytes.join('').slice(1) + '>';\n            }\n\n            return prefix + '<\\n' + bytes.map(function (line) {\n              return indent + '  ' + line;\n            }).join('\\n') + '\\n' + indent + '  >';\n          } // stringify generic objects\n\n\n          return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n            if (index === 0) {\n              return line;\n            }\n\n            return indent + '  ' + line;\n          }).join('\\n');\n        }).join('\\n') + ( // recursively textify the child boxes\n        box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n      }).join('\\n');\n    };\n\n    var mp4Inspector = {\n      inspect: inspectMp4,\n      textify: _textifyMp,\n      parseTfdt: parse$$1.tfdt,\n      parseHdlr: parse$$1.hdlr,\n      parseTfhd: parse$$1.tfhd,\n      parseTrun: parse$$1.trun\n    };\n    var discardEmulationPreventionBytes$1 = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream$1 = captionStream.CaptionStream;\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n\n\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // Bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes$1(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            }\n\n            result.push(seiNal);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return result;\n    };\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = mp4Inspector.parseTrun(trun);\n        var samples = trackRun.samples;\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        });\n        allSamples = allSamples.concat(samples);\n      });\n      return allSamples;\n    };\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n\n\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = probe.findBox(segment, ['moof', 'traf']); // To get SEI NAL units\n\n      var mdats = probe.findBox(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = probe.findBox(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n        var headerInfo = mp4Inspector.parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = probe.findBox(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n        var baseMediaDecodeTime = tfdt.length > 0 ? mp4Inspector.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = probe.findBox(traf, ['trun']);\n        var samples;\n        var seiNals; // Only parse video data for the chosen video track\n\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n          seiNals = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = [];\n          }\n\n          captionNals[trackId] = captionNals[trackId].concat(seiNals);\n        }\n      });\n      return captionNals;\n    };\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n\n\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var seiNals;\n\n      if (!trackId) {\n        return null;\n      }\n\n      seiNals = parseCaptionNals(segment, trackId);\n      return {\n        seiNals: seiNals[trackId],\n        timescale: timescale\n      };\n    };\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n\n\n    var CaptionParser$$1 = function CaptionParser$$1() {\n      var isInitialized = false;\n      var captionStream$$1; // Stores segments seen before trackId and timescale are set\n\n      var segmentCache; // Stores video track ID of the track being parsed\n\n      var trackId; // Stores the timescale of the track being parsed\n\n      var timescale; // Stores captions parsed so far\n\n      var parsedCaptions;\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n\n\n      this.init = function () {\n        captionStream$$1 = new CaptionStream$1();\n        isInitialized = true; // Collect dispatched captions\n\n        captionStream$$1.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n      };\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n\n\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null; // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n          // data until we have one\n        } else if (!trackId || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        } // Now that a timescale and trackId is set, parse cached segments\n\n\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData === null || !parsedData.seiNals) {\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n        this.flushStream();\n        return parsedCaptions;\n      };\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n\n\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream$$1.push(nal);\n        });\n      };\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.flush();\n      };\n      /**\n        * Reset caption buckets for new data\n       **/\n\n\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n      };\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.reset();\n      };\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n      /**\n        * Reset caption parser\n       **/\n\n\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {}\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser$$1;\n    var mp4 = {\n      generator: mp4Generator,\n      probe: probe,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream,\n      CaptionParser: captionParser\n    };\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck(this, MessageHandlers);\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = []; // neither buffer has been created yet\n\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  } // only one buffer is configured\n\n\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  } // both buffers are configured\n\n\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  } // both buffers are empty\n\n\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: videoBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: videoBuffered.end(count),\n      type: 'end'\n    });\n  }\n\n  count = audioBuffered.length;\n\n  while (count--) {\n    extents.push({\n      time: audioBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: audioBuffered.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * @file virtual-source-buffer.js\n */\n// We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this.transmuxer_ = new TransmuxWorker();\n\n    _this.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n      createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      } // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n\n\n      this.processPendingSegments_();\n      return;\n    }\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        } // Do nothing if a SourceBuffer of this type already exists\n\n\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n        // use that\n\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              } // if the other type if updating we don't trigger\n\n\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({\n        action: 'flush'\n      });\n    }\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      } // Remove Metadata Cues (id3)\n\n\n      removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      }; // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n        segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        } // Gather any metadata into a single array\n\n\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({\n          type: 'audioinfo',\n          info: sortedSegments.audio.info\n        });\n      }\n\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({\n          type: 'videoinfo',\n          info: sortedSegments.video.info\n        });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_); // TODO: are video tracks the only ones with text tracks?\n\n        addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      } // We are no longer in the internal \"updating\" state\n\n\n      this.bufferUpdating_ = false;\n    }\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n    _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this.sourceBuffers = [];\n    _this.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      if (!_this.player_) {\n        return;\n      } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n\n      if (this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n      }\n    }\n  });\n  return update;\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls, withCredentials, masterPlaylistLoader) {\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_();\n    }); // initialize the loader state\n\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist;\n      _this.state = 'HAVE_NOTHING';\n      return possibleConstructorReturn(_this);\n    }\n\n    _this.masterPlaylistLoader_ = masterPlaylistLoader;\n    _this.state = 'HAVE_METADATA';\n    _this.started = true; // we only should have one playlist so select it\n\n    _this.media(srcUrlOrPlaylist); // trigger async to mimic behavior of HLS, where it must request a playlist\n\n\n    window$1.setTimeout(function () {\n      _this.trigger('loadedmetadata');\n    }, 0);\n    return _this;\n  }\n\n  createClass(DashPlaylistLoader, [{\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      // getter\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n      this.state = 'HAVE_METADATA'; // switching to the active playlist is a no-op\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.media_ = playlist;\n      this.refreshMedia_(); // trigger media change if the active media has been updated\n\n      if (startingState !== 'HAVE_MASTER') {\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this2 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this2.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_\n      });\n      master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n        master.playlists[i].uri = phonyUri; // set up by URI references\n\n        master.playlists[phonyUri] = master.playlists[i];\n      } // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n\n\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri; // setup URI references\n\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this3 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this3.request = null;\n\n        if (error) {\n          _this3.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this3.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this3.state === 'HAVE_NOTHING') {\n            _this3.started = false;\n          }\n\n          return _this3.trigger('error');\n        }\n\n        _this3.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this3.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this3.masterLoaded_ = Date.now();\n        }\n\n        _this3.syncClientServerClock_(_this3.onClientServerClockSync_.bind(_this3));\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this4 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this4.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this4.clientOffset_ = _this4.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this4.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this4.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this5 = this;\n\n      this.master = this.parseMasterXml();\n      this.state = 'HAVE_MASTER';\n      this.trigger('loadedplaylist');\n\n      if (!this.media_) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.master.playlists[0]);\n      } // trigger loadedmetadata to resolve setup of media groups\n      // trigger async to mimic behavior of HLS, where it must request a playlist\n\n\n      window$1.setTimeout(function () {\n        _this5.trigger('loadedmetadata');\n      }, 0); // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n\n      if (this.master.minimumUpdatePeriod) {\n        window$1.setTimeout(function () {\n          _this5.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this6 = this;\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this6.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this6.request = null;\n\n        if (error) {\n          _this6.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this6.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this6.state === 'HAVE_NOTHING') {\n            _this6.started = false;\n          }\n\n          return _this6.trigger('error');\n        }\n\n        _this6.masterXml_ = req.responseText;\n\n        var newMaster = _this6.parseMasterXml();\n\n        _this6.master = updateMaster$1(_this6.master, newMaster);\n        window$1.setTimeout(function () {\n          _this6.trigger('minimumUpdatePeriod');\n        }, _this6.master.minimumUpdatePeriod);\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_() {\n      var _this7 = this;\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n\n        this.media_ = updatedMaster.playlists[this.media_.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this7.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true; // run completion handlers and process callbacks as updateend\n      // events fire\n\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n        _this2.pendingCallback_ = null;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n      this.runCallback_();\n    }\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(bytes, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        _this4.sourceBuffer_.appendBuffer(bytes);\n      }, done);\n    }\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceBuffer_.buffered;\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || this.pendingCallback_;\n    }\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n        });\n        this.timestampOffset_ = offset;\n      }\n\n      return this.timestampOffset_;\n    }\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n      if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n        this.sourceBuffer_.abort();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr$$1) {\n    xhr$$1.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n    if (!captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    } // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n\n\n    if (segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler); // this is an encrypted segment\n  // incrementally decrypt the segment\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: segment.key.bytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, segment.key.bytes.buffer]);\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr$$1, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr$$1(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr$$1(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr$$1(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @param {Boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    return _chosenRep ? _chosenRep.playlist : null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10), this.limitRenditionByPlayerDimensions);\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  } // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n\n\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this = possibleConstructorReturn(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT'; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // Fmp4 CaptionParser\n\n    _this.captionParser_ = new CaptionParser();\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n\n      this.resetStats_();\n      this.captionParser_.reset();\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // not sure if this is the best place for this\n\n\n      this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = oldPlaylist ? oldPlaylist.id : null;\n      this.logger_('playlist update [' + oldId + ' => ' + newPlaylist.id + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        } // the rest of this function depends on `oldPlaylist` being defined\n\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done); // clears fmp4 captions\n\n      this.captionParser_.clearAllCaptions();\n      this.trigger('reseteverything');\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      var isEndOfStream = detectEndOfStream(this.playlist_, this.mediaSource_, segmentInfo.mediaIndex);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      } // We will need to change timestampOffset of the sourceBuffer if either of\n      // the following conditions are true:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n\n\n      if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      } // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n\n\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      } // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n\n\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      } // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n\n\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      } // Under normal playback conditions fetching is a simple walk forward\n\n\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      } // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n\n\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = {\n          resolvedUri: segment.key.resolvedUri,\n          iv: iv\n        };\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      } // The request was aborted and the SegmentLoader has already been reset\n\n\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      } // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n      segmentInfo.bytes = simpleSegment.bytes;\n\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        }); // Reset stored captions since we added parsed\n        // captions to a text track at this point\n\n        this.captionParser_.clearParsedCaptions();\n      }\n\n      this.handleSegment_();\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n      // before the content segment\n\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n          this.sourceUpdater_.appendBuffer(initSegment.bytes, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n      this.sourceUpdater_.appendBuffer(segmentInfo.bytes, this.handleUpdateEnd_.bind(this));\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.state = 'READY';\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      } // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress'); // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      var isEndOfStream = detectEndOfStream(segmentInfo.playlist, this.mediaSource_, segmentInfo.mediaIndex + 1);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (char) {\n  return char.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this = possibleConstructorReturn(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n\n      return segmentInfo;\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler = function loadHandler() {\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', function () {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n\n          _this3.state = 'READY';\n\n          _this3.pause();\n\n          _this3.trigger('error');\n        });\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n      this.handleUpdateEnd_();\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this = possibleConstructorReturn(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      return {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits = function inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties.default ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group.default;\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\n\nvar byGroupId = function byGroupId(type, groupId) {\n  return function (playlist) {\n    return playlist.attributes[type] === groupId;\n  };\n};\n\nvar byResolvedUri = function byResolvedUri(resolvedUri) {\n  return function (playlist) {\n    return playlist.resolvedUri === resolvedUri;\n  };\n};\n\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        _settings$master = settings.master,\n        mediaGroups = _settings$master.mediaGroups,\n        playlists = _settings$master.playlists,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          default: {\n            default: true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      var groupPlaylists = playlists.filter(byGroupId(type, groupId));\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // List of playlists for the current group ID that have a matching uri with\n        // this alternate audio variant\n\n        var matchingPlaylists = groupPlaylists.filter(byResolvedUri(properties.resolvedUri));\n\n        if (matchingPlaylists.length) {\n          // If there is a playlist that has the same uri as this audio variant, assume\n          // that the playlist is audio only. We delete the resolvedUri property here\n          // to prevent a playlist loader from being created so that we don't have\n          // both the main and audio segment loaders loading the same audio segments\n          // from the same playlist.\n          delete properties.resolvedUri;\n        }\n\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group.default;\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: _this.withCredentials,\n      timeout: null\n    };\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_\n    };\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.withCredentials) : new PlaylistLoader(url, _this.hls_, _this.withCredentials);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n\n    return _this;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n\n        _this2.setupFirstPlay();\n\n        _this2.trigger('selectedinitialmedia');\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n\n\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n        _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n\n        _this2.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          }); // useful for monitoring QoS\n\n\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n        var buffered = _this3.tech_.buffered();\n\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine(); // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n\n\n        if (!currentPlaylist.endList || // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE || // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH || // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n        this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n        } else {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n\n            _this5.seekTo_(seekable$$1.end(0));\n\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      }; // we can begin loading now that everything is ready\n\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      } // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (isEndOfStream) {\n        this.mediaSource.endOfStream();\n      }\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n\n      if (isFinalRendition) {\n        // Never blacklisting this playlist because it's final rendition\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      } // Blacklist this playlist\n\n\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // Select a new playlist\n\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n      return this.masterPlaylistLoader_.media(nextPlaylist);\n    }\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n\n      var setDuration = function setDuration() {\n        _this6.mediaSource.duration = newDuration;\n\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      } // if the duration has changed, invalidate the cached value\n\n\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n      // attached\n\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n      // selection\n\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter = // If there is more than one mime type\n      mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        } // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n\n\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        } // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n\n\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n  var mpc = hlsHandler.masterPlaylistController_,\n      smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var seekTo = void 0;\n\n      if (seeking && this.afterSeekableWindow_(seekable, currentTime)) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (seeking && this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      } // check for gap\n\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime) {\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      if (currentTime > seekable.end(seekable.length - 1) + SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.5.1\"; // since VHS handles HLS and DASH (and in the future, more types), use * to capture all\n\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    },\n    // Sync VHS after play requests.\n    // This specifically handles replay where the order of actions is\n    // play, video element will seek to 0 (skipping the setCurrentTime middleware)\n    // then triggers a play event.\n    play: function play() {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(player.currentTime());\n      }\n    }\n  };\n});\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions; // works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n\n      if (player.eme.initializeMediaKeys) {\n        player.eme.initializeMediaKeys();\n      }\n    }\n  }\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this = possibleConstructorReturn(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          },\n          configurable: true\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this; // deprecated, for backwards compatibility\n\n      _player.dash = _this;\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    }); // Handle seeking when looping - middleware doesn't handle this seek event from the tech\n\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.tech_.seeking() && this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {\n        this.setCurrentTime(0);\n      }\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      }); // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      }); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.hls) {\n        delete this.tech_.hls;\n      }\n\n      get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }, {\n    key: 'convertToStreamTime',\n    value: function convertToStreamTime(time, callback) {\n      return getStreamTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n\n  }, {\n    key: 'seekToStreamTime',\n    value: function seekToStreamTime$$1(streamTime, callback) {\n      var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n      return seekToStreamTime({\n        streamTime: streamTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n","import videojs from 'video.js';\nimport 'video.js/src/css/video-js.scss';\nimport './style.scss';\n\nconst container = document.getElementById('app');\nconst params = new URLSearchParams(window.location.search.substring(1));\nconst assetId = params.get('mux_playback_id');\n\nif (!assetId) {\n  container.innerHTML = `<div class=\"error\"><h2>Mux Playback ID is required</h2></div>`;\n} else {\n  container.innerHTML = `\n    <div class=\"player-container\">\n      <video id=\"player\" class=\"video-js vjs-fluid\"></video>\n    </div>\n  `;\n\n  videojs('player', {\n    autoplay: true,\n    controls: true,\n    sources: [\n      {\n        src: `https://stream.mux.com/${assetId}.m3u8`,\n        type: 'application/x-mpegurl'\n      }\n    ]\n  });\n}\n"]}